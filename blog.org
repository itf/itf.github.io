#+OPTIONS:   broken-links:mark
#+OPTIONS: toc:nil num:3 H:4 ^:{} pri:t title:nil  html-style:nil html5-fancy:t
#+HTML_DOCTYPE: html5
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/org.css"/>
#+HTML_HEAD: <link rel="icon" href="ico/favicon.ico" type="image/x- icon">
* Export command :noexport: 
[[elisp:(org-export-head "../publish/")]]
  [[elisp:(org-export-head-reexport "../publish/")]]
  [[shell:cd ../publish  && git add . && git commit -m "new post!" && git push]]
[[shell:cd ../publish && git add . && git add -u && git commit -m "update posts" && git push]]
[[shell:cd ../publish && git add . && git add -u && git commit -m "drop letter css" && git push]]

[[shell:cd ../publish && git add . && git add -u &&  git commit -m "update css" && git push]]
  [[shell: git add -u && git commit -m "new post!" && git push]]

  [[shell: git add -u && git commit -m "update post!" && git push]]

  [[shell: git add -u && git commit -m "update html" && git push]]


  [[shell:cd  git add -u && git commit -m "update html" && git push && ../publish  && git add . && git commit -m "update" && git push]]

* Includes :noexport:
Creates a hard link to org.css in the export directory.
[[file:./org.css]]
file:./favicon.ico
 files for game: - [[file:./js/interactivenarrative.js][interactivenarrative.js]] - [[file:./css/textclickgame.css][textclickgame.css]] - [[file:./js/js-yaml.js][js-yaml.js]] - [[file:./yaml/alone.yaml][alone.yaml]] - [[file:./js/ace.js][ace.js]] - [[file:./js/ext-searchbox.js][ext-searchbox.js]]

* README                                                           :noexport:
Run the code inside the code block.

Run M-x org-export-head or (org-export-head directory backend)

The MENU and FOOTNOTES have to be :noexport: And they cannot contain a property drawer at the moment.

So far the only tags we use are:  header, noexport and reexport. 
Put a header tag to mark what is the header that should be copied to every page. 
Mark something with reexport to always reexport something.
Put the noexport tag to state that some header should not become a page.

You can use the macros ###MACRO###, which will be replaced with that particular headline property.

You can also use ###INDEX-WITH-DATES###  or ###TAG-WITH-DATES###, or simply ###INDEX### / ###TAG###  to display list of matching posts.



* Code   :tech:  
:PROPERTIES:
:CREATION-DATE: 2019-05-24
:MODIFICATION-DATE: 2020-06-28
:HASH:     cf8e0b799cf4343a4cf1d45f88676eb7
:PREVIOUS-HASH: cf8e0b799cf4343a4cf1d45f88676eb7
:END:
This is the code that runs this blog! I might as well have it here as well!
#+BEGIN_SRC emacs-lisp   

;; based on http://pragmaticemacs.com/emacs/export-org-mode-headlines-to-separate-files/
;; export headlines to separate files
;; http://emacs.stackexchange.com/questions/2259/how-to-export-top-level-headings-of-org-mode-buffer-to-separate-files

(setq org-export-head--html-postamble 
"<p class=\"author\">Author: Ivan Tadeu Ferreira Antunes Filho</p>
<p class=\"date\">Date: %T</p>
<p class=\"author\">Github:  <a href=\"https://github.com/itf/\">github.com/itf</a></p>
<p class=\"creator\">Made with %c and <a href=\"https://github.com/itf/org-export-head\">Org export head</a> </p>")


(defun org-export-head--run-on-temp-copy-buffer (function-to-run &rest args)
  "Runs function on a temp buffer with the contents of the original buffer"
  (save-excursion
    (let ((temp-buffer (generate-new-buffer "tmp")))
      (copy-to-buffer temp-buffer (point-min) (point-max)) 
      (with-current-buffer temp-buffer 
        (org-mode) 
        (outline-show-all) 
        (apply function-to-run args))
      (kill-buffer temp-buffer))))

(defun org-export-head (&optional directory-name backend reexport)
  "Updates the hashes and reexport all changed headings if reexport is nil.
Reexports all headings if reexport is non-nil"
  (interactive)
  (let ((directory-name (or directory-name (read-directory-name "Directory:")))
        (backend (or backend "html")))
    (make-directory directory-name t)
    (org-export-head--run-on-temp-copy-buffer #'org-export-head--modify-buffer-ast directory-name backend reexport)
    (org-export-head--update-hashes)))


(defun org-export-head-reexport (&optional directory-name backend)
  "Reexports all the headings"
  (interactive)
  (org-export-head directory-name backend t))


;;TODO this function should return a list of hashes to update the original buffer
(defun org-export-head--modify-buffer-ast (directory-path backend reexport)
  "Export all subtrees that are *not* tagged with :noexport: to
separate files.

Subtrees that do not have the :EXPORT_FILE_NAME: property set
are exported to a filename derived from the headline text."
  (org-export-head--update-hashes)
  (org-export-expand-include-keyword)

  ;; Create summaries before deleting the posts
  (org-export-head--create-summaries)
  ;; Delete content that has already been exported and set it to noreexport
  (if (not reexport)
      (org-export-head--delete-noreexport))

  ;;Get headlines, and generate macros (previous post, etc)
  (let* ((headlines-hash-list (org-export-head--get-headlines))
         (headlines-hash (car headlines-hash-list))
         (headlines-list (cdr headlines-hash-list))

         ;;Insert extra things in the headlines-hash to be used for fixing the macros
         ;;To define new headline-level macros, add extra functions here
         (headlines-hash (org-export-head--insert-next-previous-headline headlines-hash headlines-list))
         (headlines-hash (org-export-head--add-title-macro headlines-hash headlines-list))
         ;;Now we get global macros such as the index and the reversed index
         (global-macros (org-export-head--generate-index-alist headlines-list headlines-hash))
         

         ;;Now we get the templates. At the moment it is only the header
         (header (org-export-head--get-content-subtree-match "header"))
         ;;And now the footer, for example, for comments
         (footer (org-export-head--get-content-subtree-match "footer")))


      
    ;;For each not noexport/noreexport headline apply the template, i.e. copy contents
    (org-export-head--run-on-each-heading 
     #'(lambda ()
         (org-export-head--insert-on-header header)
         (org-export-head--insert-on-footer footer))
     "-noexport-noreexport")

    ;;After applying the template we replace the macros on all places
    (org-export-head--run-on-each-heading 
     #'(lambda ()
         (let* ((headline-name (org-export-head--headline))
                (headline-alist (gethash headline-name headlines-hash nil))
                (macro-alist (append headline-alist global-macros))) ;;in reverse order so that headline properties can overshadow these
           (org-export-head--replace-headline-macros macro-alist)))
     "-noexport-noreexport")

  
    ;;Get the parser tree and the headlines that will become files
    (let*  ((ast (org-element-parse-buffer)))
      
 
        ;;Fix links -- order is important. First external than fuzzy links
        (org-element-map ast 'link
          (lambda (link)
            (let* ((link (or (org-export-head--fix-file-external-link-ast directory-path link) link))
                   (link (or (org-export-head--fix-local-link-ast headlines-hash link) link))))))
      
      ;;Convert the buffer to contain the new AST, 
      ;;this is needed because the exporter expects the content to be in a buffer
      (erase-buffer) 
      (insert (org-element-interpret-data ast))
      
      
      (outline-show-all)
      
      ;;Finally export all the headers
      (org-export-head-export-headers directory-path backend))))
  


;;Not everything can be done using the AST, sadly.
;;Org element has no support for adding custom properties to headlines
;;Nor does it have a nice interface to grab the contents without the property drawer
;;Ideally everything would be done using the AST and org-element, since it is 
;;Less prone to writting bugs when using it. 
;;So right now it is only used for fixing links

;;START OF NON AST (non org-element) SESSION
(defun org-export-head--run-on-each-heading(fn match  &rest args)
  "Puts the point on each heading and runs the function. Needed for exporting all headings
   from  http://pragmaticemacs.com/emacs/export-org-mode-headlines-to-separate-files/"
  (save-excursion
    (goto-char (point-min))
    (goto-char (re-search-forward "^*"))
    (set-mark (line-beginning-position))
    (goto-char (point-max))
    (org-map-entries
     (lambda ()
       (apply fn args))
     match 'region-start-level)
    (deactivate-mark)))

(defun org-export-head-export-headers (directory-name backend)
  "Exports each heading to directory-name using backend"
  (if (equal backend "html")
      (org-export-head--run-on-each-heading 
       #'(lambda ()
           (org-set-property
            "EXPORT_FILE_NAME"
            (concat directory-name (org-export-head--escaped-headline)))
           (deactivate-mark)
           (let ((org-html-postamble org-export-head--html-postamble))
                (cl-letf (((symbol-function 'org-export-get-reference) (symbol-function 'org-export-get-reference-custom)))
                  (org-html-export-to-html nil t)))
           (set-buffer-modified-p t)) "-noexport-noreexport"))
  (if (equal backend "pdf")
      (org-export-head--run-on-each-heading 
       #'(lambda ()
           (org-set-property
            "EXPORT_FILE_NAME"
            (concat directory-name (org-export-head--escaped-headline)))
           (deactivate-mark)
           (org-latex-export-to-pdf nil t)
           (set-buffer-modified-p t)) "-noexport-noreexport")))

(defun org-export-head--goto-header(&optional no-new-line)
  "Puts point after property-block if it exists, in an empty line
  by creating a new line, unless no-new-line is non nil and returns point"
  (interactive)
  (org-back-to-heading t)
  (let* ((beg-end (org-get-property-block))
         (end (cdr beg-end)))
    (goto-char (or end (point))))
  (goto-char (point-at-bol 2)) ;;Advance one line
  (if (not no-new-line) 
      (progn
        (newline)
        (goto-char (point-at-bol 0)))) ;;Go back one line
  (point))

(defun org-export-head--goto-footer(&optional no-new-line)
  "Puts point at end of ubtree and returns point"
  (interactive)
  (org-end-of-subtree)
  (if (not no-new-line) 
      (progn
        (newline)))
  (point))


(defun org-export-head--get-content-subtree-at-point()
  (interactive)
  "Gets the content of the subtree at point, performing the necessary includes
to check if the hash "
  (save-excursion
    (deactivate-mark t)
    (let* ((start (org-export-head--goto-header t))
          (end (org-end-of-subtree t))
          (buffer (current-buffer))
          (content (buffer-substring start end))
          (include-re "^[ \t]*#\\+INCLUDE:"))
      (if (string-match include-re content)
          (with-temp-buffer
            (insert content)
            (org-mode)
            (org-export-expand-include-keyword)
            (buffer-string))
      content))))


(defun org-export-head--get-summary-at-point(&optional n-paragraphs n-chars)
  "Gets the summary of the subtree at point"
  (interactive)
  (save-excursion
    (deactivate-mark t)
    (let* ((n-paragraphs (or n-paragraphs 1))
           (n-chars (or n-chars 200))
          (start (org-export-head--goto-header t))
          (endmax (save-excursion (org-end-of-subtree t)))
          (endparagraph
           (save-excursion
             (dotimes (i n-paragraphs)
               (org-forward-paragraph))
             (- (point) 1)))
          (end (min endmax endparagraph (+ start n-chars))))
      (buffer-substring start end))))


(defun org-export-head--create-summaries()
  "Creates summary for all the headings"
  (org-export-head--run-on-each-heading 
   #'(lambda()
       (let* ((summary (org-entry-get-with-inheritance "SUMMARY"))
              (summary (or summary (org-export-head--get-summary-at-point)))
              (summary (replace-regexp-in-string "\n" " " summary)))
         (if summary
             (org-set-property "SUMMARY" summary))))
   "-noexport"))


;;; HASH code
;;Idea from https://emacs.stackexchange.com/a/39376/20165
(defun org-export-head--update-hashes()
  "Updates the hashes of all the headings"
  (org-export-head--run-on-each-heading 
   #'(lambda()
       (let ((new-hash  (format "%s" (org-export-head-get-hash-value-content)))
             (old-hash (org-entry-get-with-inheritance "HASH"))
             (older-hash (org-entry-get-with-inheritance "PREVIOUS-HASH"))) 
         (if (not old-hash)
             (progn
               (org-set-property "CREATION-DATE" (format-time-string "%Y-%m-%d"))))
         ;;If there was a change made
         (if (not (equal new-hash old-hash))
             (progn
               (org-set-property "MODIFICATION-DATE" (format-time-string "%Y-%m-%d"))
               (org-set-property "HASH" new-hash)))
         ;;Setting property is expensive
         (if (not (equal old-hash older-hash))
               (org-set-property "PREVIOUS-HASH" (or old-hash "")))))
   "-noexport"))


(defun org-export-head-get-hash-value-content()
  "Gets the hash of the subtree at point"
  (org-export-head-hash-function (org-export-head--get-content-subtree-at-point)))

(defun org-export-head-hash-function(text)
  "Function to calculate the hash of text.
Can be changed to something such as (length text) to run even faster.
Shouldn't rally affect the time to export unless your file contains over 100 thousand lines of text"
  (md5 text))

;;;END HASH CODE

(defun org-export-head--delete-noreexport()
  "Faster export by deleting things that won't be exported so we don't process them and their links"
  (org-export-head--run-on-each-heading 
   #'(lambda()
       (let ((old-hash (org-entry-get-with-inheritance "PREVIOUS-HASH"))
             (new-hash (org-entry-get-with-inheritance "HASH")))    
         ;;If there was a change made
         (if (equal new-hash old-hash)
             (progn
               (org-toggle-tag "noreexport" 'on)
               ;;faster export by deleting noexport things before processing
               (org-export-head--erase-content-subtree))))) 
   "-noexport-reexport"))

(defun org-export-head--erase-content-subtree()
  (save-excursion
    (let ((start (org-export-head--goto-header t))
          (end (org-end-of-subtree)))
      (delete-region start end))))



(defun org-export-head--get-headlines ()
  "Returns a tuple that contains a hashtable of headline name to Alist of headline properties
As well as a list of the headline names"
  (flet ((make-hash ()
                   (make-hash-table :test 'equal))
         (add-to-hash (hashtable)
                      (puthash (org-export-head--headline) (org-entry-properties) hashtable)))
    (let ((headlines-hash (make-hash))
          (headlines-list ()))
      (org-export-head--run-on-each-heading 
       #'(lambda()
           (add-to-hash headlines-hash)
           (setq headlines-list (cons (org-export-head--headline) headlines-list)))
       "-noexport")
      (cons headlines-hash headlines-list))))


(defun org-export-head--headline ()
  "Gets the headline title if point is at the headline"
  (nth 4 (org-heading-components)))

(defun org-export-head--escaped-headline ()
  (org-export-head--escape (org-export-head--headline)))


(defun org-export-head--replace-headline-macros(macro-alist)
  "Replace macros of the type ###TEXT### They can contain information such as date
or previous and next post.
Any headline property can be used as a macro of this type."
  (save-excursion
    ;;Let's find the end of the headline as a marker, since it can move
    (let ((subtree-end-marker  (save-excursion (org-end-of-subtree) (point-marker)))) 
      ;; End of subtree might change because of macro expansion, so it is recalculated.
      ;; Macros might be substituted for something smaller, so we move the point on to the left at the end.
      (while (re-search-forward "\\#\\#\\#\\([-A-Za-z_]+\\)\\#\\#\\#" (marker-position subtree-end-marker) t)
        (unless (org-in-src-block-p)
          (let* ((macro (match-string-no-properties 1))
                 (macro-subs (cdr (assoc macro macro-alist))))
            (if macro-subs
                (replace-match  macro-subs t t)
              (replace-match ""))
            (backward-char)))))))


(defun org-export-head--get-content-subtree-match(match)
  "Get content of the subtree that matches \"match\"  
Where match is a tag or -tag or combination of them."
  (save-excursion
  (let ((content "")) 
    (org-export-head--run-on-each-heading
     #'(lambda() 
         (setq content (concat content (org-export-head--get-content-subtree-at-point)))) 
     match)
    content)))

(defun org-export-head--insert-on-header (text)
  "Insert text on the header of the subtree, but after the property box"
  (save-excursion
    (org-export-head--goto-header)
    (insert text)))

(defun org-export-head--insert-on-footer (text)
  "Insert text on the footer (end) of the subtree"
  (save-excursion
    (org-export-head--goto-footer)
    (insert text)))

(defun org-export-head--generate-index-alist (headlines-list headlines-hash)
  "Geneates an org list with the index of the website and inserts it in an alist"
  (let ((index "")
        (reverse-index "")
        (index-with-dates "")
        (index-with-summaries "")
        (tags ())
        (tags-indexes ()))
    (dolist (headline-name headlines-list)
      (let* ((headline-alist (gethash headline-name headlines-hash nil))
             (entry-tags (assoc "ALLTAGS" headline-alist))
             (entry-tags (when entry-tags (delete "" (split-string (cdr entry-tags) ":"))))
             (creation-date (cdr (assoc "CREATION-DATE" headline-alist)))
             (modification-date (cdr (assoc "MODIFICATION-DATE" headline-alist)))
             (summary (string-trim (cdr (assoc "SUMMARY" headline-alist))))
             (index-entry (concat "- [["headline-name"]["headline-name"]]\n"))
             (index-entry-with-date (concat "- @@html:<b>@@[["headline-name"]["headline-name"]]@@html:</b>@@"
                                       "@@html:<span class=\"page-date\">@@"
                                       " (" creation-date", updated " modification-date ")"
                                       "@@html:</span>@@" "\n" ))
             (index-entry-with-summary 
              (concat  index-entry-with-date 
                       (unless (= (length summary) 0) 
                         (concat "   @@html:<br>@@" summary "\n")))))
        
        (setq index (concat index index-entry))
        (setq reverse-index (concat index-entry reverse-index))
        (setq index-with-dates (concat  index-with-dates index-entry-with-date))
        (setq index-with-summaries (concat  index-with-summaries index-entry-with-summary))

        (dolist (tag entry-tags)
          (if (not (member tag tags))
              (setq tags (cons tag tags)))
          (dolist (suffix '("" "-reverse" "-with-dates" "-with-summaries"))
            ;; Initialize tags lists
            (let ((tag-index-name (upcase (concat tag suffix))))
              (unless (assoc tag-index-name tags-indexes) 
                (setq tags-indexes (cons `(,tag-index-name . "")  tags-indexes)))))

          ;;Add tag indexes to list
          (let* ((tag (upcase tag))
                (tag-reverse (upcase (concat tag "-reverse")))
                (tag-with-dates (upcase (concat tag "-with-dates")))
                (tag-with-summaries (upcase (concat tag "-with-summaries")))
                (tag-assoc (assoc tag tags-indexes))
                (tag-assoc-reverse (assoc tag-reverse tags-indexes))
                (tag-assoc-with-dates (assoc tag-with-dates tags-indexes))
                (tag-assoc-with-summaries (assoc tag-with-summaries tags-indexes))
                (tag-index (cdr tag-assoc))
                (tag-index-reverse (cdr tag-assoc-reverse))
                (tag-index-with-dates (cdr tag-assoc-with-dates))
                (tag-index-with-summaries (cdr tag-assoc-with-summaries)))

            (setf (cdr tag-assoc) (concat tag-index index-entry))
            (setf (cdr tag-assoc-reverse) (concat index-entry tag-index-reverse ))
            (setf (cdr tag-assoc-with-dates) (concat tag-index-with-dates index-entry-with-date))
            (setf (cdr tag-assoc-with-summaries) (concat tag-index-with-summaries index-entry-with-summary))))))

    
    (append 
     (list (cons "INDEX" index) (cons "INDEX-REVERSE" reverse-index)  (cons "INDEX-WITH-DATES" index-with-dates) (cons "INDEX-WITH-SUMMARIES" index-with-summaries))
     tags-indexes)))

;;END OF NON AST (non org-element) SESSION


(defun org-export-head--fix-local-link-ast (headlines link)
  "Fixes fuzzy links to headlines, so the they point to new files"
  (flet ((get-hash (element set)
                   (gethash element set nil)))
    (when (string= (org-element-property :type link) "fuzzy")
      (let* ((path  (org-element-property :path link))
             (new-path (get-hash path headlines))) 
        (if new-path
          (let ((link-copy (org-element-copy link)))
            (apply #'org-element-adopt-elements link-copy (org-element-contents link))
            (org-element-put-property link-copy :type "file")
            (org-element-put-property link-copy :path (concat (org-export-head--escape path) ".org"))
            (org-element-set-element link link-copy))
          ;; else: need to check if the link is linking to a subheadline
         (save-excursion         
           (org-link-search path)
           ;; If the same heading contains multiple subheadings, each with the same name; it will simply link to the first one
           (let ((link-copy (org-element-copy link)))
            (apply #'org-element-adopt-elements link-copy (org-element-contents link))
            (org-element-put-property link-copy :type "file")
            (org-element-put-property link-copy :path (concat (org-export-head--escape (org-find-top-headline)) ".org"))
            (org-element-put-property link-copy :search-option (concat "#" (org-export-head--escape path)))
            (org-element-set-element link link-copy))
           ))))))


(defun org-export-head--fix-file-external-link-ast (directory-path link)
  "Creates hard links to the external files in the output directory"
  (when (string= (org-element-property :type link) "file")
    (let* ((path (org-element-property :path link))
           (link-copy (org-element-copy link))
           (extension (file-name-extension path))
           (img-extensions '("jpg" "tiff" "png" "bmp"))
           (link-description (org-element-contents link))
           ;;Removes ../ from the releative path of the file to force it to be moved to a subfolder
           ;;of the current dir. This causes some file conflits in edge cases
           ;;e.g: ../images and ../../images will map to the same place. This should be rare in normal usage
           (new-relative-path 
            (concat "./" (file-name-extension path) "/" (file-name-nondirectory path)))
           (new-hard-link-path (concat directory-path new-relative-path))
           (new-hard-link-directory (file-name-directory new-hard-link-path)))
      
      ;;Fix the AST
      ;;If image, remove description so it will become a real image instead of a link
      (unless (or (member extension img-extensions))
        (apply #'org-element-adopt-elements link-copy link-description))
      (org-element-put-property link-copy :path new-relative-path)
      (org-element-set-element link  link-copy)
      
      ;;Create hard link folder
      (make-directory new-hard-link-directory t)
      ;;Create hard link, not replacing if it already exists, catching error if file does not exist
      (condition-case nil
          (add-name-to-file path new-hard-link-path nil)
        (error nil)))))


(defun org-export-head--insert-next-previous-headline(headlines-hash headlines-list)
  "Decides what is the next and the previous post and create macro"
  (let* ((temp-list (cons nil headlines-list))
        (len (length headlines-list)))
    (dotimes (i len)
      (let* ((previous (nth 0 temp-list))
            (headline-name (nth 1 temp-list))
            (next (nth 2 temp-list))
            (headline (gethash headline-name headlines-hash nil))
            (new-properties 
             (list (cons "PREVIOUS" (or next "index"))
                   (cons "NEXT" (or previous "index"))))
            (headline (append headline new-properties))) ;; In reverse order, to allow headline properties to shadow this.
        (puthash headline-name headline headlines-hash))
        (setq temp-list (cdr temp-list))))
  headlines-hash)
      
(defun org-export-head--add-title-macro(headlines-hash headlines-list)
  "Creates title macro"
  (let* ((temp-list (cons nil headlines-list))
        (len (length headlines-list)))
    (dotimes (i len)
      (let* ((headline-name (nth 1 temp-list))
            (headline (gethash headline-name headlines-hash nil))
            (new-properties 
             (list (cons "TITLE" headline-name)))
            (headline (append headline new-properties))) ;; In reverse order, to allow headline properties to shadow this.
        (puthash headline-name headline headlines-hash))
        (setq temp-list (cdr temp-list))))
  headlines-hash)


(defun org-export-head--headline-to-file(headline-name)
  "Generate the file name of the headline"
  (concat (org-export-head--escape headline-name) ".org"))


(defun org-export-head--escape(text)
  (when text
    (let* ((text (replace-regexp-in-string " " "_" text))
           (text (replace-regexp-in-string "/" "-" text))
           (text  (replace-regexp-in-string "[^[:alnum:]-_]" "" (s-downcase text))))
      text)))


;;Nice export headings http://ivanmalison.github.io/dotfiles/#usemyowndefaultnamingschemefororgheadings
(defun imalison:org-get-raw-value (item)
  (when (listp item)
    (let* ((property-list (cadr item)))
      (when property-list (plist-get property-list :raw-value)))))

(defun imalison:generate-name (datum cache)
  (let ((raw-value (imalison:org-get-raw-value datum)))
    (if raw-value
        (org-export-head--escape raw-value)
      ;; This is the default implementation from org
      (let ((type (org-element-type datum)))
        (format "org%s%d"
                (if type
                    (replace-regexp-in-string "-" "" (symbol-name type))
                    "secondarystring")
                (incf (gethash type cache 0)))))))


(use-package ox)
  :defer t
  :config
  (defun org-export-get-reference-custom (datum info)
    "Return a unique reference for DATUM, as a string.
DATUM is either an element or an object.  INFO is the current
export state, as a plist.  Returned reference consists of
alphanumeric characters only."
    (let ((type (org-element-type datum))
          (cache (or (plist-get info :internal-references)
                     (let ((h (make-hash-table :test #'eq)))
                       (plist-put info :internal-references h)
                       h)))
          (reverse-cache (or (plist-get info :taken-internal-references)
                             (let ((h (make-hash-table :test 'equal)))
                               (plist-put info :taken-internal-references h)
                               h))))
      (or (gethash datum cache)
          (let* ((name (imalison:generate-name datum cache))
                 (number (+ 1 (gethash name reverse-cache -1)))
                 (new-name (format "%s%s" name (if (< 0 number) (format "%s%s" "." number) ""))))
            (puthash name number reverse-cache)
            (puthash datum new-name cache)
            new-name))))
#+END_SRC

#+RESULTS:
: org-export-get-reference-custom




* Menu :noexport:header:

#+begin_head
#+begin_title
[[index][Ivanaf]]
#+end_title

#+begin_menu
- [[index][Home]]
- [[About][About]]
- [[Resume][Resume]]
- [[Portfolio][Portfolio]]
- [[Contact][Contact]]
- [[Projects ideas][Messy Ideas]]
#+end_menu
#+end_head

@@html: </p><h1>@@
###TITLE###
@@html: </h1><p>@@

@@html:<span class=page-date> <small>@@
###CREATION-DATE###, updated ###MODIFICATION-DATE### [[###NEXT###][###NEXT###]] -- [[###PREVIOUS###][###PREVIOUS###]]
@@html:</small> </span> @@
#+TOC: headlines 2
* Footer :noexport:footer:
#+BEGIN_EXPORT html
</div></div>
<br>
<div class="comments">
<div id="disqus_thread"></div>
<script type="text/javascript">
/* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'ivanaf'; // Required - Replace '<example>' with your forum shortname
    /* * * DON'T EDIT BELOW THIS LINE * * */
    var showComments = function() {
    var button = document.getElementById('comment-button')
        button.style.display = 'none'
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        };
    </script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<button id="comment-button" onclick="showComments()">Show comments</button>
</div>
<div><div>
#+END_EXPORT

* index                           :reexport:
  :PROPERTIES:
  :CREATION-DATE: 2018-09-09
  :MODIFICATION-DATE: 2020-07-23
  :HASH:     8ee106a71f1805782c6660af609e35b8
  :PREVIOUS-HASH: 8ee106a71f1805782c6660af609e35b8
  :END:

** Technical posts
###TECH-WITH-SUMMARIES###
** Personal posts
###PERSONAL-WITH-SUMMARIES###

#+BEGIN_EXPORT html
<style>
.outline-2 h2{
 font-size:1.6em;
 margin-top:0.67em;
 margin-bottom:0.67em;
 margin-left:0;
 margin-right:0;
 font-weight:bold
}
.outline-text-2 ul li {
 border-top:dotted 2px rgba(160,160,160,0.3);
 margin:1.5em 0 0 0
}
.outline-text-2 ul {
 margin-left:0px;
 list-style:none;
padding-left: 1em;
}
.outline-text-2 ul li b a {
 text-align:left;
 display:block;
 font-size:1.3em;
 margin-top:0.83em;
 margin-left:0;
 margin-right:0;
 font-weight:bold
}
.outline-2 {
 box-shadow:0px 0px 1px rgba(0,0,0,0.5);
 padding:10px;
 margin-top:20px
}
.rss-item-auth {
 text-align:left;
 font-size:14px;
 color:#828282
}
.rss-date {
 text-align:left;
 display:block;
 font-size:14px;
 font-weight:800;
 color:#828282
}
</style>
#+END_EXPORT
* Blog
:PROPERTIES:
:CREATION-DATE: 2020-07-23
:MODIFICATION-DATE: 2020-07-23
:HASH:     8baccdde89c745ebf3c0f23e723cc7cb
:PREVIOUS-HASH: 8baccdde89c745ebf3c0f23e723cc7cb
:END:

###INDEX-WITH-SUMMARIES###
* About
  :PROPERTIES:
  :CREATION-DATE: 2018-09-09
  :MODIFICATION-DATE: 2020-06-21
  :HASH:     6a81679a100b9fd52e9d1d08b99221be
  :PREVIOUS-HASH: 6a81679a100b9fd52e9d1d08b99221be
  :END:

#+BEGIN_CENTER
#+ATTR_ORG: :width 300
#+CAPTION: 
[[./img/ivan.jpg]]
#+END_CENTER
I am Ivan Tadeu Ferreira Antunes Filho. Master of Engineering in Computer Science student from MIT.   I'm really excited about science, technology and photography. 

I currently work as a software engineer at Radix Labs.
** Recent stuff
   You can see some of the recent things I've worked on on my [[Portfolio][portfolio]] or on my [[Resume][resume]] page, depending if you are interested in my side projects or more on academics and internships. 

** Old stuff
   :PROPERTIES:
   :CUSTOM_ID: old-stuff
   :END:

*** Medals in Science Olympiads (2006-2013)
    :PROPERTIES:
    :CUSTOM_ID: medals-in-science-olympiads-2006-2013
    :END:

I took part in multiple science olympiads back in highschool, here is a
list of the competitions. 

#+BEGIN_EXPORT html
<style type="text/css">
	.P4 { font-weight:bold; }
</style>
<table border="0" cellspacing="0" cellpadding="0" class="Tabela1"><colgroup><col width="298"><col width="37"><col width="92"><col width="84"><col width="231"></colgroup><tbody>
<tr><td><p>Competition</p></td><td><p>Year</p></td><td><p>International/National/State/Regional/   </p></td><td><p>Medal</p></td><td><p>Subjects</p></td></tr>

<tr><td><p>Lins   Regional   Mathematics   Olympiad</p></td><td><p>2006</p></td><td><p>Regional</p></td><td><p>Gold</p></td><td><p>Mathematics</p></td></tr>
<tr><td><p>Lins   Regional   Mathematics   Olympiad</p></td><td><p>2007</p></td><td><p>Regional</p></td><td><p>Gold</p></td><td><p>Mathematics</p></td></tr>
<tr><td><p>Brazilian   Mathematics   Olympiad</p></td><td><p>2007</p></td><td><p>National</p></td><td><p>Gold</p></td><td><p>Mathematics</p></td></tr>
<tr><td><p>Brazilian   Mathematics   Olympiad</p></td><td><p>2008</p></td><td><p>National</p></td><td><p>Bronze</p></td><td><p>Mathematics</p></td></tr>
<tr><td><p>Sao   Paulo   </p><p>State   Mathematics   Olympiad</p></td><td><p>2008</p></td><td><p>State</p></td><td><p>Gold</p></td><td><p>Mathematics</p></td></tr>
<tr><td><p>Rio   Preto   Regional   Mathematics   Olympiad</p></td><td><p>2008</p></td><td><p>Regional</p></td><td><p>Gold</p></td><td><p>Mathematics</p></td></tr>
<tr><td><p>Brazilian   Mathematics   Olympiad</p></td><td><p>2009</p></td><td><p>National</p></td><td><p>Honorable   Mention</p></td><td><p>Mathematics</p></td></tr>
<tr><td><p>Sao   Paulo   </p><p>State   Mathematics   Olympiad</p></td><td><p>2009</p></td><td><p>State</p></td><td><p>Gold</p></td><td><p>Mathematics</p></td></tr>
<tr><td><p>Rio   Preto   Regional   Mathematics   Olympiad</p></td><td><p>2009</p></td><td><p>Regional</p></td><td><p>Gold</p></td><td><p>Mathematics</p></td></tr>
<tr><td><p>Brazilian   Physics   Olympiad</p></td><td><p>2009</p></td><td><p>National</p></td><td><p>Gold</p></td><td><p>Physics</p></td></tr>
<tr><td><p>Sao   Paulo   </p><p>State   Physics   Olympiad</p></td><td><p>2009</p></td><td><p>State</p></td><td><p>Gold</p></td><td><p>Physics</p></td></tr>
<tr><td><p>Brazilian   Junior   Chemistry   Olympiad</p></td><td><p>2009</p></td><td><p>National</p></td><td><p>Silver</p></td><td><p>Chemistry</p></td></tr>
<tr><td><p>Brazilian   Junior   Science   Olympiad</p></td><td><p>2009</p></td><td><p>National</p></td><td><p>Gold</p></td><td><p>Physics,   Chemistry   and   Biology</p></td></tr>
<tr><td><p class="P4">International   Junior   Science   Olympiad</p></td><td><p class="P4">2009</p></td><td><p class="P4">International</p></td><td><p class="P4">Silver</p></td><td><p class="P4">Physics,   Chemistry   and   Biology</p></td></tr>
<tr><td><p>Brazilian   Astronomy   Olympiad</p></td><td><p>2009</p></td><td><p>National</p></td><td><p>Silver</p></td><td><p>Astronomy   and   Astrophysics</p></td></tr>
<tr><td><p>Brazilian   Mathematics   Olympiad</p></td><td><p>2010</p></td><td><p>National</p></td><td><p>Honorable   Mention</p></td><td><p>Mathematics</p></td></tr>
<tr><td><p>Sao   Paulo   </p><p>State   Mathematics   Olympiad</p></td><td><p>2010</p></td><td><p>State</p></td><td><p>Silver</p></td><td><p>Mathematics</p></td></tr>
<tr><td><p>Rio   Preto   Regional   Mathematics   Olympiad</p></td><td><p>2010</p></td><td><p>Regional</p></td><td><p>Gold</p></td><td><p>Mathematics</p></td></tr>
<tr><td><p>Brazilian   Physics   Olympiad</p></td><td><p>2010</p></td><td><p>National</p></td><td><p>Silver</p></td><td><p>Physics</p></td></tr>
<tr><td><p>Sao   Paulo   </p><p>State   Physics   Olympiad</p></td><td><p>2010</p></td><td><p>State</p></td><td><p>Gold</p></td><td><p>Physics</p></td></tr>
<tr><td><p>Brazilian   Chemistry   Olympiad</p></td><td><p>2010</p></td><td><p>National</p></td><td><p>Honorable   Mention</p></td><td><p>Chemistry</p></td></tr>
<tr><td><p>Brazilian   Junior   Science   Olympiad</p></td><td><p>2010</p></td><td><p>National</p></td><td><p>Gold</p></td><td><p>Physics,   Chemistry   and   Biology</p></td></tr>
<tr><td><p class="P4">International   Junior   Science   Olympiad</p></td><td><p class="P4">2010</p></td><td><p class="P4">International</p></td><td><p class="P4">Gold</p></td><td><p class="P4">Physics,   Chemistry   and   Biology</p></td></tr>
<tr><td><p class="P4">International   Junior   Science   Olympiad  –  Team   practical   competition</p></td><td><p class="P4">2010</p></td><td><p class="P4">International</p></td><td><p class="P4">Bronze</p></td><td><p class="P4">Physics,   Chemistry   and   Biology</p></td></tr>
<tr><td><p>Brazilian   Astronomy   Olympiad</p></td><td><p>2010</p></td><td><p>National</p></td><td><p>Gold</p></td><td><p>Astronomy   and   Astrophysics</p></td></tr>
<tr><td><p>Brazilian   Informatics   Olympiad</p></td><td><p>2010</p></td><td><p>National</p></td><td><p>Gold</p></td><td><p>Programming</p></td></tr>
<tr><td><p>Brazilian   Mathematics   Olympiad</p></td><td><p>2011</p></td><td><p>National</p></td><td><p>Bronze</p></td><td><p>Mathematics</p></td></tr>
<tr><td><p>Sao   Paulo   </p><p>State   Mathematics   Olympiad</p></td><td><p>2011</p></td><td><p>State</p></td><td><p>Gold</p></td><td><p>Mathematics</p></td></tr>
<tr><td><p>Brazilian   Physics   Olympiad</p></td><td><p>2011</p></td><td><p>National</p></td><td><p>Silver</p></td><td><p>Physics</p></td></tr>
<tr><td><p>Sao   Paulo   </p><p>State   Physics   Olympiad</p></td><td><p>2011</p></td><td><p>State</p></td><td><p>Gold</p></td><td><p>Physics</p></td></tr>
<tr><td><p class="P4">International   Physics   Olympiad</p></td><td><p class="P4">2011</p></td><td><p class="P4">International</p></td><td><p class="P4">Bronze   </p></td><td><p>Physics</p></td></tr>
<tr><td><p>Brazilian   Chemistry   Olympiad</p></td><td><p>2011</p></td><td><p>National</p></td><td><p>Honorable   Mention</p></td><td><p>Chemistry</p></td></tr>
<tr><td><p>On-line   Chemistry   Contest   </p></td><td><p>2011</p></td><td><p>National</p></td><td><p>Silver</p></td><td><p>Chemistry</p></td></tr>
<tr><td><p>Sao   Paulo   State   Chemistry   Olympiad</p></td><td><p>2011</p></td><td><p>State</p></td><td><p>Silver</p></td><td><p>Chemistry</p></td></tr>
<tr><td><p>Brazilian   Physics   Tournament</p></td><td><p>2011</p></td><td><p>National</p></td><td><p>Bronze</p></td><td><p>Physics   and   Argumentation.   Team   competition</p></td></tr>
<tr><td><p>Brazilian   Astronomy   Olympiad</p></td><td><p>2011</p></td><td><p>National</p></td><td><p>Gold</p></td><td><p>Astronomy   and   Astrophysics</p></td></tr>
<tr><td><p class="P4">International   Astronomy   and   Astrophysics   Olympiad</p></td><td><p class="P4">2011</p></td><td><p class="P4">International</p></td><td><p class="P4">Bronze</p></td><td><p class="P4">Astronomy,   Astrophysics   and   basic   data   analysis</p></td></tr>
<tr><td><p>Brazilian   Informatics   Olympiad</p></td><td><p>2011</p></td><td><p>National</p></td><td><p>Silver</p></td><td><p>Programming</p></td></tr>
<tr><td><p>Brazilian   Biology   Olympiad</p></td><td><p>2011</p></td><td><p>National</p></td><td><p>10th   place</p></td><td><p>General   Biology</p></td></tr>
<tr><td><p>Brazilian   Linguistics   Olympiad</p></td><td><p>2011</p></td><td><p>National</p></td><td><p>Gold</p></td><td><p>Lingustics,   Logic</p></td></tr>
<tr><td><p class="P4">International   Physics   Olympiad</p></td><td><p class="P4">2012</p></td><td><p class="P4">International   </p></td><td><p class="P4">Gold</p></td><td><p class="P4">Physics</p></td></tr>
<tr><td><p class="P4">Ibero-American Computer Correspondence Contest (CIIC) </p></td><td><p class="P4">2011</p></td><td><p class="P4">International</p></td><td><p class="P4">Silver</p></td><td><p class="P4">Informatics</p></td></tr>
<tr><td><p class="P4">Physics   Cup</p></td><td><p class="P4">2012</p></td><td><p class="P4">International</p></td><td><p class="P4">8th   place</p></td><td><p class="P4">Physics</p></td></tr>
<tr><td><p>Sao   Paulo   State   Chemistry   Olympiad</p></td><td><p>2012</p></td><td><p>State</p></td><td><p>Silver</p></td><td><p>Chemistry</p></td></tr>
<tr><td><p>Brazilian   Physics   Tournament</p></td><td><p>2012</p></td><td><p>National</p></td><td><p>Silver</p></td><td><p>Physics   and   Argumentation.   Team   competition</p></td></tr>
<tr><td><p>Brazilian   Astronomy   Olympiad</p></td><td><p>2012</p></td><td><p>National</p></td><td><p>Gold</p></td><td><p>Astronomy   and   Astrophysics</p></td></tr>
<tr><td><p class="P4">International   Astronomy   and   Astrophysics   Olympiad</p></td><td><p class="P4">2012</p></td><td><p class="P4">International</p></td><td><p class="P4">Silver</p></td><td><p class="P4">Astronomy,   Astrophysics   and   Basic   Data   Analysis</p></td></tr>
<tr><td><p>Brazilian   Biology   Olympiad</p></td><td><p>2012</p></td><td><p>National</p></td><td><p>1st   place</p></td><td><p>General   Biology</p></td></tr>
<tr><td><p class="P4">Iberoamerican   Biology   Olympiad</p></td><td><p class="P4">2012</p></td><td><p class="P4">International</p></td><td><p class="P4">Silver</p></td><td><p class="P4">General   Biology</p></td></tr>
<tr><td><p class="P4">Iberoamerican   Biology   Olympiad  –  Rally   (mixed   countries   team   competition)</p></td><td><p class="P4">2012</p></td><td><p class="P4">International</p></td><td><p class="P4">Gold</p></td><td><p class="P4">Biology,   Team   Work</p></td></tr>
<tr><td><p>Brazilian   Linguistics   Olympiad</p></td><td><p>2012</p></td><td><p>National</p></td><td><p>Gold</p></td><td><p>Linguistics,   Logic</p></td></tr>
<tr><td><p class="P4">International   Linguistics   Olympiad</p></td><td><p class="P4">2012</p></td><td><p class="P4">International</p></td><td><p class="P4">Silver</p></td><td><p>Linguistics,   Logic</p></td></tr>
<tr><td><p>Brazilian Mathematical Olympiad</p></td><td><p>2012</p></td><td><p>Nacional</p></td><td><p>Menção Honrosa</p></td><td><p>Matemática</p></td></tr>
<tr><td><p class="P4"> World Physics Olmpyad  (WoPhO)</p></td><td><p class="P4">2012/2013</p></td><td><p class="P4">International</p></td><td><p class="P4">Silver</p></td><td><p class="P4">Physics</p></td></tr>
<tr><td><p>Brazilian   Biology   Olympiad</p></td><td><p>2013</p></td><td><p>National</p></td><td><p>Gold</p></td><td><p>General   Biology</p></td></tr>
<tr><td><p>Olimpíada Brasileira de Linguística</p></td><td><p>2013</p></td><td><p>National</p></td><td><p>Gold</p></td><td><p>Lingustics,   Logic</p></td></tr></tbody></table>

<p class="Standard">&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><table border="0" cellspacing="0" cellpadding="0" class="Tabela2"><colgroup><col width="136"><col width="139"><col width="139"><col width="139"><col width="139"><col width="51"></colgroup><tbody>
<tr><td><p>Level</p></td><td><p>Gold Medals</p></td><td><p>Silver Medals</p></td><td><p>Bronze Medals</p></td><td><p>Honorable Mentions</p></td><td><p>Total</p></td></tr>
<tr><td><p>Regional</p></td><td><p>5</p></td><td><p>0</p></td><td><p>0</p></td><td><p>0</p></td><td><p>5</p></td></tr>
<tr><td><p>State</p></td><td><p>5</p></td><td><p>3</p></td><td><p>1</p></td><td><p>0</p></td><td><p>9</p></td></tr>
<tr><td><p>National</p></td><td><p>13</p></td><td><p>7</p></td><td><p>4</p></td><td><p>5</p></td><td><p>29</p></td></tr>
<tr><td><p>Iberoamerican</p></td><td><p>1</p></td><td><p>2</p></td><td><p>0</p></td><td><p>0</p></td><td><p>3</p></td></tr>
<tr><td><p>International</p></td><td><p>2</p></td><td><p>4</p></td><td><p>3</p></td><td><p>0</p></td><td><p>9</p></td></tr>
<tr><td><p>Total</p></td><td><p>26</p></td><td><p>16 </p></td><td><p>8</p></td><td><p>5</p></td><td><p>54</p></td></tr></tbody></table><p>&nbsp;</p><p>&nbsp;</p><p>New Medals for Brazil</p><table border="0" cellspacing="0" cellpadding="0" class="Tabela3"><colgroup><col width="354"><col width="112"><col width="106"><col width="168"></colgroup><tbody>
<tr><td><p class="P4"> World Physics Olmpyad  (WoPhO)</p></td><td><p class="P4">2012/2013</p></td><td><p class="P4">International</p></td><td><p class="P4">Silver</p></td></tr>
<tr><td><p class="P4">International   Linguistics   Olympiad</p></td><td><p class="P4">2012</p></td><td><p class="P4">International</p></td><td><p class="P4">Silver</p></td></tr></tbody></table><p>&nbsp;</p>
#+END_EXPORT

*** In the Media (2011-2013)
    :PROPERTIES:
    :CUSTOM_ID: in-the-media-2011-2013
    :END:

And because of the science olympiads, I've also appeared in the media a
number of times. Here are some interviews to newspapers, magazines and
TV. 
- [[http://www1.folha.uol.com.br/educacao/1144885-jovem-de-17-anos-ganha-provas-internacionais-de-fisica-linguistica-e-astronomia.shtml][*Folha - Jovem de 17 anos ganha provas internacionais de física, linguística e astronomia*]]
- [[http://g1.globo.com/sp/bauru-marilia/noticia/2012/08/estudante-do-centro-oeste-paulista-e-campeao-internacional-de-ciencias.html][Estudante do Centro-Oeste Paulista é campeão internacional de ciências]]
- [[http://extra.globo.com/noticias/educacao/vida-de-calouro/medalhista-em-olimpiadas-cientificas-da-dicas-para-dominar-as-exatas-5967334.html][Medalhista em olimpíadas científicas dá dicas para dominar as Exatas]]
- [[http://g1.globo.com/vestibular-e-educacao/noticia/2012/07/brasil-ganha-quatro-medalhas-na-olimpiada-internacional-de-fisica.html][Brasil ganha quatro medalhas na Olimpíada Internacional de Física]]
- [[http://odia.ig.com.br/portal/cienciaesaude/brasil-conquista-medalhas-em-olimp%C3%ADada-internacional-de-astronomia-e-astrof%C3%ADsica-1.476164][Brasil conquista medalhas em Olimpíada Internacional de Astronomia e Astrofísica]]
- [[http://www.objetivo.br/noticias.asp?id=3801][Ivan Tadeu: as lições de um jovem talento- (Objetivo)]]
- [[http://www.brasil.gov.br/noticias/arquivos/2012/08/1o/olimpiada-internacional-de-fisica-da-medalha-de-ouro-a-brasileiro][Brasileiro vence Olimpíada Internacional de Física]]
- [[http://www.afolha.com.br/suplementos.php?noticia=767][Brasileiro ganha ouro em olimpíada internacional de física-a folha]]
- [[http://www.jornaldaciencia.org.br/Detalhe.jsp?id=83527][Brasileiro ganha ouro em Olimpíada Internacional de Física --  www.jornaldaciencia.org.br]]
- [[http://globotv.globo.com/tv-tem-interior-sp/tem-noticias-1a-edicao-baurumarilia/v/estudante-do-centro-oeste-paulista-e-campeao-internacional-de-ciencias/2106698/][(Video)Estudante do Centro-Oeste Paulista é campeão internacional de ciências]]
- [[http://www.sbt.com.br/defrentecomgabi/noticias/10939/Ja-paquerei-uma-menina-falando-das-estrelas-diz-o-campeao-do-intelecto-Ivan-Antunes-Filho.html][*(TV interview)De Frente Com Gabi 16/10/2012 -- Ivan Antunes Filho*]]
- [[http://www.atitudesaopaulo.com.br/?p=8167][Depois da aula...O universo complementar das Olimpíadas Científicas]]
- [[http://jornaldagazeta.tvgazeta.com.br/index.php?option=com_videoflow&task=play&id=7947][(Video) Um aluno de 17 anos na elite mundial]]
- [[http://globotv.globo.com/tv-morena/mstv-1a-edicao-campo-grande/v/fetec-e-aberta-com-participacao-de-estudantes-de-escolas-publicas-e-particulares/2204230/][(Video) Fetec é aberta com participação de estudantes de escolas públicas e particulares]]
- [[http://www.correiodoestado.com.br/noticias/feira-de-tecnologia-comeca-hoje-no-ginasio-moreninho_163798/][Feira de Tecnologia começa hoje no Ginásio Moreninho]]
- [[http://g1.globo.com/educacao/noticia/2011/07/brasileiros-ganham-medalhas-em-olimpiada-internacional-de-fisica.html][Brasileiros ganham medalhas em olimpíada internacional de física]]
- [[http://g1.globo.com/educacao/noticia/2013/03/referencia-em-tecnologia-mit-admite-quatro-brasileiros-para-graduacao.html][Referência em tecnologia, MIT admite quatro brasileiros para graduação]]
- [[http://www.terra.com.br/noticias/educacao/infograficos/olimpiadas-escolares/][Olimpíadas Escolares -- Terra Educação]]

* Resume 
  :PROPERTIES:
  :CREATION-DATE: 2018-09-09
  :MODIFICATION-DATE: 2020-03-01
  :HASH:     03ced9a493c581f41809db532e86f858
  :PREVIOUS-HASH: 03ced9a493c581f41809db532e86f858
  :END:

This resume is a bit out out-of-date.

#+BEGIN_EXPORT html
<object id='pdf' data='pdf/IvanFilho-ResumeFall2018.pdf' type='application/pdf' class='pdf-viewer'>
  Your browser does not support PDF objects in HTML.<br>
</object>

<script>
  window.onresize = function() {
    document.getElementById('pdf').style.height =
      window.innerHeight - document.getElementById('pdf').offsetTop- 16 + 'px';
  };
  window.onload = window.onresize;
</script>
<!-- Copyright (c) 2016 Saswat Padhi, The MIT License (MIT).-->
#+END_EXPORT

Please download the PDF version [[file:pdflib/IvanFilho-ResumeFall2018.pdf][here]]
* Contact
  :PROPERTIES:
  :CREATION-DATE: 2018-09-09
  :MODIFICATION-DATE: 2019-05-23
  :HASH:     49e13ac662b842b40a9b54bb04dd68d7
  :PREVIOUS-HASH: 49e13ac662b842b40a9b54bb04dd68d7
  :END:

Contact me through email (ivan af @ mit). If you need to meet with me, below is my schedule.




#+BEGIN_EXPORT html
<button onclick="displayIframe()" id="calendar-button">Display Google calendar</button>
<div id="iframeDisplay"></div>  

<script>
function displayIframe() {
var button = document.getElementById('calendar-button');
button.style.display = 'none';
document.getElementById("iframeDisplay").innerHTML = "<iframe src=\"https://calendar.google.com/calendar/embed?mode=WEEK&src=itadeufa%40gmail.com&ctz=America%2FNew_York\"  style=\"border: 0\" width=\"800\" height=\"600\" frameborder=\"0\" scrolling=\"no\"</iframe>";
}
</script>
</body>


#+END_EXPORT
* Portfolio 
  :PROPERTIES:
  :CREATION-DATE: 2018-09-09
  :MODIFICATION-DATE: 2020-07-23
  :HASH:     94f13fe18802840fb96a9e130bafd3bc
  :PREVIOUS-HASH: b5c8292061439fd3700b25a310548b3f
  :END:
#+BEGIN_EXPORT html
<style>
#table-of-contents {
display: none;
}
</style>
#+END_EXPORT


In construction.
Different projects I worked on over the years. Some very tiny,  some large ones.


@@html:<div class="responsive-table">@@
*** [[http://erikdemaine.org/theses/ifilho.pdf][Master's of Engineering Thesis]]
    :PROPERTIES:
    :HTML_CONTAINER_CLASS: portfolio-project
    :END:
    2019 - 
My master's of engineering thesis in Boolean Satisfiability, supervised by Erik Demaine.
*** [[https://github.com/OlimpiadasCientificas/olimpiadascientificas.github.io/blob/master/_includes/olimpiadascraper.py][Autoscraper for Brazilian Science Olympiads]]
 :PROPERTIES:
    :HTML_CONTAINER_CLASS: portfolio-project
    :END:
    2019 - 

A tool to scrape Brazilian Science Olympiad Websites for their news.
*** [[https://github.com/itf/6s092][6.S092 Introduction to Algorithms ]]
    :PROPERTIES:
    :HTML_CONTAINER_CLASS: portfolio-project
    :END:
I organized the class 6.S092 twice while at MIT. It was an IAP class (1 month long in January), using CATSOOP to teach people the basics of algorithms. 

*** [[https://github.com/itf/org-export-head][Org export head]]
    :PROPERTIES:
    :HTML_CONTAINER_CLASS: portfolio-project
    :END:
    2018- Org mode to blog exporter. Converts each header to a different file. This blog was written using it!


*** [[https://itf.github.io/2018/02/08/Groebner-Basis/][Groebner Basis for Linear Network Coding in Sage]]
    :PROPERTIES:
    :HTML_CONTAINER_CLASS: portfolio-project
    :END:

#+ATTR_ORG: :width 300
[[./img/projects/sage0.png]]

2018-  Proof of concept that it is possible, in a reasonable time, to test the
 solvability of linear networks by calculating the Groebner basis of the
 linear network ideal.

 It implements an algorithm described on An Algebraic Approach to Network
 Coding by Ralf Koetter, Member, IEEE, and Muriel Médard, Senior Member,
 IEEE.


*** [[https://www.facebook.com/media/set/?set=a.1844569188904101.1073741855.100000531142103&type=1&l=71845e495e][Yaoi on Fire - Photos]]
    :PROPERTIES:
    :CUSTOM_ID: yaoi-on-fire---photos
    :HTML_CONTAINER_CLASS: portfolio-project
    :END:

#+ATTR_ORG: :width 300

[[./img/projects/yaoi-on-fire.jpg]]

2017-  One of the photographers for the Yaoi on Fire performance of the MIT
 spinning arts club.

*** Electric Skateboard
    :PROPERTIES:
    :CUSTOM_ID: electric-skateboard
    :HTML_CONTAINER_CLASS: portfolio-project
    :END:
#+ATTR_ORG: :width 300
#+CAPTION: 
[[./img/projects/skate.png]]

2017- For the class Intro to Making at MIT, my friends and I built an Electric
Skateboard.



*** [[https://itf.github.io/the-awakening/][The awakening (unfinished). Text based game]]
    :PROPERTIES:
    :CUSTOM_ID: the-awakening-unfinished.-text-based-game
    :HTML_CONTAINER_CLASS: portfolio-project
    :END:

2017- An experimental text based game inspired by “the space under the
window”, and by “A Dark Room”.

The user interacts with the text, and the text is written and rewritten
based on the interaction with the user.

The game is unfinished, and theres is only about 1 minute of gameplay at
the moment.

*** [[http://lazulimotel.com/][Facebook advertisement for Lazuli Motel]]
    :PROPERTIES:
    :CUSTOM_ID: facebook-advertisement-for-lazuli-motel
    :HTML_CONTAINER_CLASS: portfolio-project
    :END:
#+ATTR_ORG: :width 300
#+CAPTION: 
[[./img/projects/lazuli.jpg]]

2017- Created ad campaigns for the Lazuli Motel website I previously created
with a tight budget. For about $1 a day for 3 months, it brought
approximately 80 extra visitor to the website per day. The average time
spent per user on the website was 3 minutes.

It was not possible to analyze exactly how many clients the ad campaign
brought to the business, but given how many times the business got
contacted by phone during the ad campaign it seems that the campaign was
fairly successful.



*** [[http://lazulimotel.com/][Lazuli Motel Website and pictures]]
    :PROPERTIES:
    :CUSTOM_ID: lazuli-motel-website-and-pictures
    :HTML_CONTAINER_CLASS: portfolio-project
    :END:
#+ATTR_ORG: :width 300
#+CAPTION: 
[[./img/projects/lazuli.jpg]]


2017- I took HDR pictures from the rooms of Lazuli Motel in Botuca, SP,
Brazil, and created a website for it, using Hugo as a static website
generator.

The website was intended to be accessed on 3g networks, so the image
quality and sizes were chosen in such a way to improve the user
experience, and it is also a single page website in order to not reload
already loaded information, and if the user's network fails, they can
still continue to see the information that has already been loaded.


*** [[https://github.com/itf/imagenet-download][Imagenet-download]]
    :PROPERTIES:
    :CUSTOM_ID: imagenet-download
    :HTML_CONTAINER_CLASS: portfolio-project
    :END:

2016- A simple command line tool to download images from the imagenet dataset
while storing them with humanreadable names and ignoring images that are
too small.



*** [[Led Panel][Led Panel 30x60px]]
    :PROPERTIES:
    :CUSTOM_ID: led-panel-30x60px
    :HTML_CONTAINER_CLASS: portfolio-project
    :END:

#+ATTR_ORG: :width 300
#+CAPTION: 
[[./img/projects/cloudsRainbow.png]]

2016- My friends and I built a 30x60 pixels led panel, using Ws2812b strips. I
programmed the led panel graphics using Python, in a way that makes it
easy to combine patterns and functions into new patterns.


*** [[http://maslab.mit.edu/wiki/index.php?title=Team_Six/Final_Paper][Maslab]]
    :PROPERTIES:
    :CUSTOM_ID: maslab
    :HTML_CONTAINER_CLASS: portfolio-project
    :END:

#+ATTR_ORG: :width 300
#+CAPTION: 
[[./img/projects/janky.jpg]]

2015- We built Cocoabot, a robot capable of finding cubes on a field and
stacking them by color. Cocoabot had around 10.000 lines of C++11 code,
split in 10 threads, running in an Intel Edison.

I was responsible for integrating the modules, writing the skeleton code
for the threads, designing the state machine and the motor-controllers
code, debugging the code with GDB and finding memory leaks. Documented
on tinyurl.com/cocoabot.



*** L shaped wooden loft
    :PROPERTIES:
    :CUSTOM_ID: l-shaped-wooden-loft
    :HTML_CONTAINER_CLASS: portfolio-project
    :END:

#+ATTR_ORG: :width 300
#+CAPTION: 
[[./img/projects/loft.jpg]]

2013- Designed and built an L-shaped wooden loft for me and my roommate during
my first month at MIT. The loft was very stable and at one moment had
over 6 people on top of it jumping and moving to confirm its stability.





*** [[http://olimpiadascientificas.org/static/pdf/Linguistica0.8.pdf][IOL study guide (unfinished) (pt-br)]]
    :PROPERTIES:
    :CUSTOM_ID: iol-study-guide-unfinished-pt-br
    :HTML_CONTAINER_CLASS: portfolio-project
    :END:
#+ATTR_ORG: :width 300
#+CAPTION: 
[[./img/projects/iol.png]]


2012- Study guide for the International Linguistics Olympiad, in pt-br. I
wrote it as I was preparing to take part in IOL 2012 in Slovenia, in
order the following Brazilian teams to prepare for IOL.



*** [[http://olimpiadascientificas.com/static/pdf/formulasheet-pt_br1.0.pdf][Translation of IPhO formula sheet.]]
    :PROPERTIES:
    :CUSTOM_ID: translation-of-ipho-formula-sheet.
    :HTML_CONTAINER_CLASS: portfolio-project
    :END:

#+ATTR_ORG: :width 300
#+CAPTION: 
[[./img/projects/ipho.png]]

2012- Translation of the 2012 IPhO formula sheet from English to Portuguese,
with minor edits to examples to make some concepts easier to understand.



*** [[http://iplayif.com/?story=https://github.com/itf/Interactive-Narrative-Inform7/raw/master/aloneinthedarkness.z8][Alone in the darkness. Text based game (inform7)]]
    :PROPERTIES:
    :CUSTOM_ID: alone-in-the-darkness.-text-based-game-inform7
    :HTML_CONTAINER_CLASS: portfolio-project
    :END:

2012- A text based game inspired by “the space under the window”, written in
inform 7.

The user interacts with the text, and the text is written and rewritten
based on the interaction with the user.

2019- The game was ported to javascript and now supports click instead of writing [[A game from the past]]
*** [[http://olimpiadascientificas.org/][Olimpíadas Científicas]]
    :PROPERTIES:
    :CUSTOM_ID: olimpíadas-científicas
    :HTML_CONTAINER_CLASS: portfolio-project
    :END:

#+ATTR_ORG: :width 300
#+CAPTION: 
[[./img/projects/bonecooc.png]]

2009- now. First Brazilian website to help high school students and teachers to
participate in Science Olympiads.\\
Used to have ∼500 visits per day.\\
Made with wordpress.org, migrated to jekyll in 2016 after a problem with
the wordpress website. Dozens of volunteers have helped with the
website, helping provide material, write news and find information about
the competitions.

It was cited by the largest Brazilian newspaper in 2012,
tinyurl.com/ocientificas.
@@html:</div>@@

@@html: @@

* Hello world! :personal:
  :PROPERTIES:
  :CREATION-DATE: 2018-09-09
  :MODIFICATION-DATE: 2019-11-24
  :HASH:     53a45ecab603c06a3c9fb2db381f62dc
  :PREVIOUS-HASH: 53a45ecab603c06a3c9fb2db381f62dc
  :END:

I've always felt that I am more productive when I share my work or study
with others. This caused me to have 3 main blogs/websites in
the past. 
- 1 was focused in national and international science olympiads informing people about the multiple competitions that there exists, and explaining how to study for them [[https://www.olimpiadascientificas.org][www.olimpiadascientificas.com]]
- Another explained my own methods of study, motivations and stories related to those same science competitions.
- And later I made a third blog focused on the activities I took part on, such as biking, running or exploring.

This website will focus in projects, HOWTOs and small hacks or
suggestion such as command line scripts, easier ways to run programs,
suggestions for how to edit pictures, and so on. Or at least that is the intention. 

It is written completely in org-mode using a static website generator I made using all the awesome functionality already available in org mode, such as export to html. 

You can see the project here: [[https://github.com/itf/org-export-head][org-export-head]]. If you decide to use it, let me know! It would make me quite happy.

Welcome!

* Linear Panorama                                      :projects:photography:tech:
  :PROPERTIES:
  :CREATION-DATE: 2015-12-13
  :MODIFICATION-DATE: 2020-06-21
  :HASH:     424e723f9a0b9303521843cf33bd46e3
  :PREVIOUS-HASH: 424e723f9a0b9303521843cf33bd46e3
  :END:

** Summary: 
   :PROPERTIES:
   :CUSTOM_ID: summary-photographing-linear-panoramas-of-murals-in-a-place-with-poor-light-conditions-and-short-distance-to-the-wall.
   :END:
Photographing linear panoramas of murals, in a place with poor light conditions, and short distance to the wall.
** Intro
   :PROPERTIES:
   :CUSTOM_ID: intro
   :END:

Photographing the murals in my dorm is a really challenging task. The
distance between the walls in the corridor is between 1.5m to 1.7m and
the height of the murals is approximately 2m.

Besides this, I don't have any special device to illuminate the walls,
besides a simple octopus floor lamp with yellowish incandescent lights.

Given these constrains I photographed the murals, and made the following
linear panoramas (click for full size)
[[http://slugwiki.mit.edu/images/5/5e/BS.jpg][http://slugwiki.mit.edu/images/thumb/5/5e/BS.jpg/798px-BS.jpg]]

[[http://slugwiki.mit.edu/images/5/5b/BC.jpg][http://slugwiki.mit.edu/images/thumb/5/5b/BC.jpg/800px-BC.jpg]]

** Hardware
   :PROPERTIES:
   :CUSTOM_ID: hardware
   :END:

-  Canon T2i with [[http://www.magiclantern.fm/][/Magic Lantern/]]
   installed
-  Opteka 6.5mm (Also known as Samyang 8mm, it is the same lens sold by
   a different company)
-  Octopus floor lamp (any floor lamp would work)
-  Tripod (set to around 1m)

** Software
   :PROPERTIES:
   :CUSTOM_ID: software
   :END:

-  Enfuse
-  Macrofusion
-  Hugin

** Work Flow
   :PROPERTIES:
   :CUSTOM_ID: work-flow
   :END:

*** Calibrate the Lens.
    :PROPERTIES:
    :CUSTOM_ID: calibrate-the-lens.
    :END:

If your lens are not calibrated, this should be the first step, if not,
skip this session. At first, take a picture of a mural in a way that
there are many clear straight lines in the image. Load the image in
Hugin. The follow the
[[http://hugin.sourceforge.net/tutorials/calibration/en.shtml][/instruction on Hugin to calibrate your lens/]]. Instead of using a diagonal line,
which might be hard to find, you can use multiple horizontal and
vertical lines. However, do not choose horizontal line on the options.

If you are using a non standard lens, such as the Samyang 8mm, it is
sometimes better to calibrate the lens for the approximate distance that
you are gonna take the pictures from.

*** Taking the pictures.
    :PROPERTIES:
    :CUSTOM_ID: taking-the-pictures.
    :END:

Set your tripod to be about half of the right of the wall your are
photographing (in case it is very near you). If it is farther, or you
are not using fish-eye lens this won't affect you much.

Set your camera to fully manual mode, set the ISO to the lowest setting
(in order to minimize noise), set the focus to manual mode, and also set
the white balance to manual mode. It doesn't matter what setting you
choose for the white balance.

Take multiple pictures, moving the position of the lights between each
picture, but do not move the camera. This will assure you that you have
the whole scene well illuminated. Besides this, by having your light
coming from multiple directions, the end result will have even light,
which considerably improves the quality of the image (It makes it look
like a scanner)

In order to not move the camera, you should use a shutter cable, or
using the [[http://wiki.magiclantern.fm/userguide][/LCDsensor Remote/]]
shoot on shooting preferences of Magic Lantern, if you use a canon dlsr.
#+ATTR_ORG: :width 300
#+CAPTION: 
[[file:///home/ivanaf/org/blog/source/img/mural_1.jpg]]
#+ATTR_ORG: :width 300
#+CAPTION: 
[[file:///home/ivanaf/org/blog/source/img/mural_2.jpg]]

#+ATTR_ORG: :width 300
#+CAPTION: 
[[./img/mural_3.jpg]]

  
*** Fusing the images

    :PROPERTIES:
    :CUSTOM_ID: fusing-the-images
    :END:

To fuse the images, you should use
[[http://wiki.panotools.org/Enfuse][Enfuse]]. Enfuse is a command line
tool for exposure fusing (it can also )

In order to better enfuse the pictures I recommend
[[http://sourceforge.net/projects/macrofusion/][/Macrofusion/]].
Macrofusion is a fast, simple and responsive GUI for Enfuse. Macrofusion
makes it easy to choose the weights of exposure, contrast and saturation
when fusing the images.

#+CAPTION: Mural enfused
#+ATTR_ORG: :width 300
#+CAPTION: 
[[./img/mural_enfused.jpg]]


*** Straightening the images.
    :PROPERTIES:
    :CUSTOM_ID: straightening-the-images.
    :END:

Open the image in Hugin, and load the lens configuration for your lens.

Choose a rectilinear projection in Hugin's fast preview window.
#+ATTR_ORG: :width 300
#+CAPTION: 
[[./img/hugin_options.png]]

This should have straightened up the image. But there should still be
perspective problems. Set the horizon and vertical lines in the control
points tab and optimize the lens parameters. A full tutorial can be seen
on
[[http://hugin.sourceforge.net/tutorials/perspective/en.shtml][/Hugin's
SourceForge page/]]

Most of the times, Hugin white balance correction in the preview window
is enough to fix the image colors. And you just need to stitch the
image.

#+CAPTION: Mural final
#+ATTR_ORG: :width 300
#+CAPTION: 
[[./img/mural_final.jpg]]

*** Taking the other pictures
    :PROPERTIES:
    :CUSTOM_ID: taking-the-other-pictures
    :END:

Move the camera to a new position and leave some overlap between the
images. It doesn't matter how much overlap you are leaving between the
images, in general, what matters is that the images overlap in a line
that can contain small errors.

*** Stitching
    :PROPERTIES:
    :CUSTOM_ID: stitching
    :END:

The images of the linear panorama should be added one at a time,
therefore, you should start with a image that would be in the middle and
then move to the corners. Since this is a tutorial I will stitch only 2
images.

#+CAPTION: Second Mural
#+ATTR_ORG: :width 300
#+CAPTION: 
[[./img/mural2_final.jpg]]

Load both of the images in Hugin, choosing the type of lens to be
rectilinear and choose some small value for the focal length, such as
10mm.

Set the control points between the images (you can also add lines) and
choose custom parameters for the geometric optimization. You should
probably set them by hand.

#+CAPTION: Hugin Rectilinear
#+ATTR_ORG: :width 300
#+CAPTION: 
[[./img/hugin_options2.png]]

All but one picture parameters should be constant, because we are always
adding one image at a time. For the picture that you are optimizing, you
should optimize X, Y and HFOV. Since the pictures are already straight,
you shouldn't need to optimize roll.

If this optimization is not enough, you can optimize for other
parameters, but it is usually not necessary.

If there are areas between the images that don't match very well in
their intersection, it is generally better to add a mas in order to use
the result from a single image.

Choose custom parameters for photometric optimization. Again, always
change only one image at a time. The parameters that you should optimize
are EV, Er and Eb. Optimizing the lens parameters usually result in poor
blending for linear panoramas.

*** Adding masks
    :PROPERTIES:
    :CUSTOM_ID: adding-masks
    :END:

If the images don't perfectly match on top of each other, you have 2
options:

-  Try to optimize other lens parameters
-  Add masks to include certain parts of an image or remove it from
   others.

Generally adding masks is faster and results in fewer problems.

You should also use masks to force Hugin to choose the image that has
the best resolution for areas where the details are important.

*** Stitching
    :PROPERTIES:
    :CUSTOM_ID: stitching-1
    :END:

After you've added all the images it is time to stitch. If you are
stitching to JPG, you should keep the canvas size's dimensions below
2^{32}-1.

Choose exposure fused from any arrangement, click in calculate optimal
size if you simply want the largest resolution possible, and stitch!


#+ATTR_ORG: :width 300
#+CAPTION: 
[[./img/mural_stitched.jpg]]
@@html:<small>@@
Mural stitched using only 2 control points@@html:</small>@@

Congratulations! You've finished your linear panorama.

*** Common Problems
    :PROPERTIES:
    :CUSTOM_ID: common-problems
    :END:

The horizon might start to bend. In order to fix this, create a horizon
line accross pictures, by adding control points for the horizon line
across different images.
* Led Panel                                                        :projects:tech:
  :PROPERTIES:
  :CREATION-DATE: 2016-03-16
  :MODIFICATION-DATE: 2020-06-21
  :HASH:     f90fda3cc8e887ef5c43b1a4f1a03b1e
  :PREVIOUS-HASH: f90fda3cc8e887ef5c43b1a4f1a03b1e
  :END:


My friends and I built an led matrix with 30x60 pixels. This post will
focus mainly on the software, but first, let's skim through the
hardware.

** Material:
   :PROPERTIES:
   :CUSTOM_ID: material
   :END:

-  70 meters of ws2812 strips
-  A 90 amps, 5v power supply
-  20 feet of gauge 2 stranded copper wire.
-  A raspberry pi.
-  2 ethernet cables.
-  Speaker wire (any other medium-large wire would also work)
-  Female header pins
-  Hot glue
-  Plywood, 2x3s pieces of wood and diffuse vinyl fabric for the frame.

** Construction
   :PROPERTIES:
   :CUSTOM_ID: construction
   :END:
#+ATTR_ORG: :width 300
#+CAPTION: 
[[./img/ledbuilding.png]]

The construction was simple, but took around 40 man hours.

First, we cut all the Led strips into 2meter strips, and soldered header
pins onto the cut parts.

We built the 1x2m frame by cutting the wood pieces onto the necessary
lengths at the store. We drilled holes on the frame and tied all the led
strips onto it, and then hot glued the strips.

For the power, we had a 90A, 5V power supply, connected using 2 10 feet
gauge 2 stranded copper wire (which minimized the voltage drop to around
0.2v); on the sides of the frame we attached 8 strands of speaker wire
and soldered wires to them.

The wires and strips were connected to each other, and held into place
by hot glue.

A raspberry pi connected to the Internet through Ethernet sends data to
the LEDs using a stripped Ethernet cable.

So far, the main difficulty was handling the voltage drop caused by
90amps going through the wires. Just get larger wires and you'll be good
to go, as long as you calculate the voltage drop before building it.

** Software
   :PROPERTIES:
   :CUSTOM_ID: software-1
   :END:

#+CAPTION: Panel
#+ATTR_ORG: :width 300
[[./img/panel.jpg]]

The software of this project was pretty fun to code and it is pretty fun
to use in my opinion.

All of it can be found in the
[[https://github.com/itf/led-curtain-2][/github repo of the project/]].
If you want to take a look at the details of each design choice, just
read the read-me of the github repo. This post describes what motivated
each design choice and when each module was built, and why.

Programming really complex effects is really hard and boring, so my main
objective was to make it possible to combine simple patters and effects
into more complex effects. More specifically those were the maing
objectives:

1- Capable of creating new functions by combining previous ones 2-
Reacts to music / beats 3- Few dependencies / dependencies that are easy
to install 4- Modular (can change the protocol to control other types of
LED screens, LED strips, increase the number of strips being controlled,
add plugins, etc) 5- Mostly in a single language 6- Ideally,
communication through UDP / WebRTC 7- Should run on Linux, Windows and
Mac.

This will be written in the order that things were coded. You should
skip direct to the patterns and effects session to see the cool parts!

*** Starting
    :PROPERTIES:
    :CUSTOM_ID: starting
    :END:

I started programming the led panel long before I had the LED panel. So
the first thing I needed, in my opinion, was a fake led panel.

I found a friend's project [[https://github.com/mlsteele/curtain][Iron
Curtain]] that had some code for a local display; a display that
mimecked an led panel. So I
[[https://github.com/itf/led-curtain-2/blob/master/Display/Pygame/pgCurtain.py][modified
the code]] to be able to handle an arbirtrary number of pixels.

After I had a way of testing my code, I needed a way of sending data. I
made a
[[https://github.com/itf/led-curtain-2/blob/master/Transportation/Sockets/ClientSocketUDP.py]["Client"
and a "Server"]] that communicated using UDP. The client sent data to
the server, and the server sent the data to the local display. I wrote a
[[https://github.com/itf/led-curtain-2/blob/master/Tests/TestSendData.py][few
tests]] to make sure everything worked.

Now I needed a way to represent the pixels, in order to work with them.
I wrote a
[[https://github.com/itf/led-curtain-2/blob/8536d31cf1e8a3a9d30239358a54033fddf5a044/ScreenCanvas.py][canvas
class]] that I could use to represent the pixels of the screen, and that
could handle all edge cases (for example, what to do when trying to
address a pixel that is not on the screen?) I decided to handle such
edge cases by making the screen "repeatable and infinite" i.e. if you
address the pixel -1 you go back to the right most pixel.

After all the basics were built it was time to start building the
patterns.

*** Patterns and effects
    :PROPERTIES:
    :CUSTOM_ID: patterns-and-effects
    :END:

Patterns objective:

1- Be easy to modify or add effects (example: increase speed, change
colors, etc) 2- Be easy to combine 3- Possible to save to a file and
load from files.

How to make patterns in a way that it is easy to combine?

There are basically two options of how to make the patterns: they can be
functions or they can be objects.

One option was to have each pattern being an object, and having objects
that take other objects on their input to combine patterns. This would
allow to have states in a very simple way, and change the states in each
update. This is how 1e, a different hall in my dorm, does it, as seen on
their [[https://github.com/FirstEast/1e-Disco/blob/master/server/pattern/pattern.py][gitrepo]].

If they are functions they should be easier to compose; however, in
order to have an internal state, one needs to use closure, which can add
a lot of complexity to the code.

I first tried to make the patterns objects. But it was really hard for
me to reason about what was the right behavior for the patterns and how
to combine them in interesting ways without adding a lot of boiler plate
code. For example, what does it mean to take the mean of two (object)
patterns? It means to call a function in the the first pattern to
generate an image, do the same on the second pattern, and, at last,
create a new object that implements a function that generates this
particulat image.

Instead, I decided to make the patterns functions that, when possible,
don't haven an internal state.

**** Why no internal state?
     :PROPERTIES:
     :CUSTOM_ID: why-no-internal-state
     :END:

The main advantage of not having an internal state is that it allows one
to easily modify the patterns. Let's say that we want to generate a
circle that increases and decreases its size in each frame. One option
is to create a pattern that contains the circle radius as part of its
internal state and at each frame it changes the circle radius. This
works, but is rather hard to modify.

A simpler solution is to have a pattern that simply creates a circle and
takes as its input something that can be used to generate the circle
radius. At each step, we can have this input change, and, this way, we
can create any kind of pattern that involves circles that change sizes.

**** What about this input?
     :PROPERTIES:
     :CUSTOM_ID: what-about-this-input
     :END:

You might ask now, what about this input? Wouldn't it be very specific
to each pattern and make it hard to modify or combine them? In theory,
this could be the case if you don't make the input generic enough. In
order to have it as generic as possible, the input was simply a python
dictionary.

On this input, which was conveniently called "Pattern Input" all the
necessary information related to patterns is stored. It stores the frame
number, the canvas that will contain the image that will be generated,
the radius of the circle, audio information, etc. And any pattern could
potentially modify it or have it modified by functions!

**** Fast development
     :PROPERTIES:
     :CUSTOM_ID: fast-development
     :END:

After defining the input to patterns all the development got faster.
Patterns were defined as "Functions that take pattern inputs and return
pattern inputs" . Functions were defined as "Functions that take
patterns and return patterns". Some of the basic patterns that I created
were: "Red": makes the canvas red. "Circle": makes a circle of radius
"cradius". "Trivial": returns the same pattern input that it received.

Some of the basic functions I created first were: "hue", shifits the hue
of the image by an specied amount. "Rainbow": shifts the hue by an
amount linearly dependent on the position.

Some of the auxiliary decorators I made in the code were: "defaultArgs":
add default arguments to the pattern input. An example is: the circle
gets the radius from the pattern input. However, if the pattern input
has no info about the circle radius, it should be initialized to a
default value.

This was enough to create many interesting and simple functions, but it
was not enough to generate arbitrarily complex functions.

The next milestone on the development, was when I created the function
"arg". Arg is the only function in the code that doesn't immediately
modify a pattern.

**** What is arg?
     :PROPERTIES:
     :CUSTOM_ID: what-is-arg
     :END:

I needed a way to modify the aruments to the functions. However, since
every function took a pattern and every pattern took a pattern input,
there was no where to modify the arguments themselves besides hard
coding them in the code. "Arg" is the function that solves this problem.

Arg is a function that takes a string and returns a "Function". Remember
that "Functions" are things that modify patterns. So far, "arg" is not
special. The special part is that it runs the string as if it was python
code, but from inside the context of the "Pattern Input". In other
words:

arg("cRadius=frame/10.%20")(circle)

Is a pattern that generates a circle whose radius depends on the frame
number. It is a pattern that evolves in time!

After arg was defined, lots of other patterns and functions were
created. Patterns that opened images, functions that took the mean of
patterns, etc.

**** Problems with lack of states.
     :PROPERTIES:
     :CUSTOM_ID: problems-with-lack-of-states.
     :END:

However, the design choice of abolishing internal states could only me
so far. I wanted to create transitions between patterns and patterns
such as the snake game.

To solve the problem of transitions, using closure, transitions keep
track of how much it has already transitioned between patterns. Because
of this, it is hard to modify the transitions themselves without changes
in the code.

To create patterns with internal states, the solution was similar,
certain patterns could have access to an internal dictionary that keeps
track of its internal state. As with the transtions, the internal state
can't be modified by other patterns. Even with those limitations, those
patterns could make extensive use of the rest of the functions. As soon
as I created a snake game pattern it was possible to blur the snakes,
change their color and make them brighter and darker with the rithm..

*** Other small detais
    :PROPERTIES:
    :CUSTOM_ID: other-small-detais
    :END:

This covers most of the development of the software. The audio
information are functions inside the pattern input, and any pattern can
make use of the audio.

The leds make use of a linear color profile, and therefore I had to
convert the colors from SRGB to linear before sending the data through
UDP.

The code was meant to be easy to develop and use, not meant to be fast.
In order to run it at fast speeds, you need to use pypy.
* MIT entrepreneurship resources :tech:
  :PROPERTIES:
  :CREATION-DATE: 2018-01-21
  :MODIFICATION-DATE: 2018-09-09
  :HASH:     b0cd808d059296a90a858006ad5e355f
  :PREVIOUS-HASH: b0cd808d059296a90a858006ad5e355f
  :END:

This is a summary of entrepreneurship resources available to MIT
students. Those are my notes, taken during startmit. If there are any
mistakes, please message me.

** Martin Trust Center
   :PROPERTIES:
   :CUSTOM_ID: martin-trust-center
   :END:

Entrepreneur environment. Go there to meet people.\\
[[http://entrepreneurship.mit.edu/coaching/][Entrepreneur in residence]], entrepreneurs at MIT to help you.\\
Check the MTC website: [[http://entrepreneurship.mit.edu/]]

*** Sector practice leaders SPL
    :PROPERTIES:
    :CUSTOM_ID: sector-practice-leaders-spl
    :END:

[[http://entrepreneurship.mit.edu/sector-practice-leaders/][Sector
practice leaders]], to help you with a specific industry.\\
For example:oint the biotech mailing list and hackingmedicine at
[[file:hackingmedicine.mit.edu]] and [[file:biotech.mit.edu]], or the
[[https://arts.mit.edu/start/entrepreneurship/creative-arts-competition/][creative art competition]].

*** Sandbox
    :PROPERTIES:
    :CUSTOM_ID: sandbox
    :END:

Fund and mentorship for any student grad or undergrad interested in
trying entrepreneurship or start a company. $1k for doing market
research and prototyping. They say mentorship is the most useful part of
this program. [[http://sandbox.mit.edu/]]. February 11 2018 deadline.

** The engine
   :PROPERTIES:
   :CUSTOM_ID: the-engine
   :END:

Affiliated to MIT but for profit. Help founders go from discovery of
hadtech to commercialization.\\
If you have some hardtech that will take 10 to 20 years before
commercialization/profit, the engine is the palce to go, as long is it
in the areas they invest:

-  Advanced Manufacturing
-  Deep Software
-  Energy
-  Internet of Things
-  Biotech & Life Sciences
-  Advanced Materials
-  Robotics
-  Space
-  Semiconductors
-  and the intersection of other new technology

Check [[https://www.engine.xyz/]].

** [[https://innovation.mit.edu][MIT innovation initiative]]
   :PROPERTIES:
   :CUSTOM_ID: mit-innovation-initiative
   :END:

If your path is fuzzy and you need help figuring out your area and what
to do. Has a resource guide to help you navigate entrepreneurship at
MIT: [[https://innovation.mit.edu/resources/]], it also shows what is
happening now at MIT in innovation.

** [[http://deshpande.mit.edu/][Deshpande Center]]
   :PROPERTIES:
   :CUSTOM_ID: deshpande-center
   :END:

Moving technology: lab to market. From research to spinout. Grant
program funding and Mentorships. Has industry mentors and help with
market discovery. It is close to entrepreneurs and investors and lots of
events focused in awareness. Select, Direct and connect is their motto.
This could be seen as a step before the engine. The grants are from 50k
to 150k.

*** MIT 100k competition.
    :PROPERTIES:
    :CUSTOM_ID: mit-100k-competition.
    :END:

Workshop and Mentorship are advertised as being quite good. It
encompasses 3 different programs 100k for pitch, 100k for accelerator,
100k for launch. You should apply for all of them but specially to the
ones that fits your better. Apply at [[http://www.mit100k.org/]]

*** TFP
    :PROPERTIES:
    :CUSTOM_ID: tfp
    :END:

[[http://www.rle.mit.edu/translational/][Translational Fellowship
program]]. For when your technology is still very far away from
commercialization. It is focused on researchers.

*** [[http://legatum.mit.edu/][Legatum Center]]
    :PROPERTIES:
    :CUSTOM_ID: legatum-center
    :END:

Improve global wellbeing.Put things in the field. Tactical clinics in
emerging markets.

*** TLO
    :PROPERTIES:
    :CUSTOM_ID: tlo
    :END:

[[https://tlo.mit.edu/][Technology licensing office]]. Talk to use to
know if your research intellectual property belongs to MIT or to you.

** [[http://hkinnovationnode.mit.edu/program/memsi/][MEMSI hongkong.]]
   :PROPERTIES:
   :CUSTOM_ID: memsi-hongkong.
   :END:

Two programs. One during the summer: May 29 to June 9 2018 and and
another during IAP. 1 day factory visit in china. Focuses in making and
entrepreneurship. EE, MEch Also has
[[http://hkinnovationnode.mit.edu/program/mefti/][MEFTI]], MIT
Entrepreneurship and FinTech Integrator, August 25 to September first.
Useful for going abroad and working with people from a different
culture.

** [[https://gelp.mit.edu/grad][6.928, 16.990, 15.s67]]
   :PROPERTIES:
   :CUSTOM_ID: s67
   :END:

Leading creative teams.\\
Learn to build high performing teams. Useful for startups even though it
is not focused in startups per se. Also useful to become a more
impactful engineer and professional.

Spring 2018, Friday 9:30am to 12:30pm. 9 Units

** Gordon-MIT engineering leadership program.
   :PROPERTIES:
   :CUSTOM_ID: gordon-mit-engineering-leadership-program.
   :END:

Year long program for next year. GEL program 18 units total. They
recommend registering for
[[https://gelp.mit.edu/students/engineering-innovation-design][ESD.051,6.902, Engineering Innovation & Design]].

*** [[https://lemelson.mit.edu/studentprize][Lemelson-MIT student
prize]].
    :PROPERTIES:
    :CUSTOM_ID: lemelson-mit-student-prize.
    :END:

Celebrating inventions. Focuses on tested prototype of tech based
invention. Having patents before applying is encouraged but not
required. Offers $10k for undergrad teams. 15k for grad. The
applications for 2019 open in april.

** [[file:vms.mit.edu.][MIT venture mentoring]]
   :PROPERTIES:
   :CUSTOM_ID: mit-venture-mentoring
   :END:

You don't need to have a technology venture. It can be any area. The
venture can be in the idea bench of lab bench. As long as it is a
business we can take.

You only need to be commited to starting a business. Able to pull it of.
It is a very very practical program, focuses heavily in implementation.
They are not interested in 5 years from now (like the engine), they are
interested in 5 weeks from now. Mentoring in teams, 3 or 4 mentors at a
time. The mentors assign themselves to the students. MIT venture
mentoring commits to a longterm relationship (after you graduate we are
still here for you). They also have rules for the advisors, so you don't
have to worry about advisors with hidden agendas.

*** [[https://www.bostonseed.com/][Boston seed capital]]
    :PROPERTIES:
    :CUSTOM_ID: boston-seed-capital
    :END:

Angel round. Seed round. Go to investors that usually focus in your
area. They usually focus in consumer digitals (ai, etc). Usually
software. Resources are CEO experts.
[[http://bostontechguide.com/][Hitchiker guide to boston mentors]]. Most
amazing angel mentors.

Social events. Easier to go as an mit student. Boston is one of the best
cities to start a venture.

** [[https://studentlife.mit.edu/ideas][MIT ideas global challenge]]
   :PROPERTIES:
   :CUSTOM_ID: mit-ideas-global-challenge
   :END:

Positive impact in the world. Ideas global challenge. Social
entrepreneurship. Up to 15k.

** Joe Caruso
   :PROPERTIES:
   :CUSTOM_ID: joe-caruso
   :END:

Advocate for entrepreneurs. General input, generalist, brainstorm, talk
about founder and technology issues. Very generic resource. jcaruso at
bantam group.

** [[https://masschallenge.org/startup/good-benefits][Maschallenge startup benefits.]]
   :PROPERTIES:
   :CUSTOM_ID: maschallenge-startup-benefits.
   :END:

Non profit. 0 equity. 1.5M support. Startups that are ready. Waterhole
for the local innovation community.

** [[https://cic.com/][CIC]]
   :PROPERTIES:
   :CUSTOM_ID: cic
   :END:

Cambridge innovation center. Kendalsquare sloanm grad. Broadway and
third. one of the Densest cluster of startups in the world. Host 100
events per month. Cic.com. Blog , podcast and newsletter.
* Multi-audio (In development) :tech:
  :PROPERTIES:
  :CREATION-DATE: 2018-01-21
  :MODIFICATION-DATE: 2018-09-09
  :HASH:     8af351d5713395cb9f49c5d8113f5cde
  :PREVIOUS-HASH: 8af351d5713395cb9f49c5d8113f5cde
  :END:

I enjoy [[https://en.wikipedia.org/wiki/Binaural_recording][binaural]]
audio. If you don't know what I'm talking about, I'd recommend putting
on headphones and listening to the
[[https://www.youtube.com/watch?v=IUDTlvagjJA][virtual barber shop]].

** What makes audio binaural?
   :PROPERTIES:
   :CUSTOM_ID: what-makes-audio-binaural
   :END:

In few words, you can detect from which location a sound is coming from
by detecting the delay (difference in phase) between the ears, which can
reach $\frac{25cm}{330m/s} \approx 0.8ms$. However, we can localize the
source of a sound in 3 dimensions and the difference in phase only
provides us with one constraint. The rest of the information comes from
how frequencies are absorbed by the head, outer ear and body are
direction dependent; as well as the difference in audio intensity
between the ears.

** Programs that use HRTF
   :PROPERTIES:
   :CUSTOM_ID: programs-that-use-hrtf
   :END:

The response of each ear based on the direction of the sound is called
[[https://en.wikipedia.org/wiki/Head-related_transfer_function][Head-related transfer function (hrtf)]]. Multiple programs can make use of HRTF in
order to localize a sound source. Games that use
[[https://www.openal.org/][openal]] usually have a setting to activate
HRTF if you are using headphones. One example of such game is Minecraft.
Another program is
[[https://www.reddit.com/r/linux_gaming/comments/2ot5ov/enable_system_wide_hrtf_with_pulseaudio/][pulseaudio]].
It allows you to convert 5.1 audio into binaural audio by localizing the
sound that would come from each of the speakers. This makes watching
movies with a headphone a fairly pleasing experience.

** Basic idea
   :PROPERTIES:
   :CUSTOM_ID: basic-idea
   :END:

It is easy to set up audio pipes using jack. I usually install
[[http://kxstudio.linuxaudio.org/Applications:Cadence][Cadence]] to do
so, since it is extremely user friendly. Therefore, if I can setup a
simple jack application that uses a simple GUI to decide the location of
an audio source and then play the audio on headphones, it should allow
me to do things such as multiaudio or having some sound sound like it is
moving around me.

** About the tools
   :PROPERTIES:
   :CUSTOM_ID: about-the-tools
   :END:

*** [[http://www.jackaudio.org/][JACK]]
([[http://kxstudio.linuxaudio.org/Applications:Cadence][Cadence]])
    :PROPERTIES:
    :CUSTOM_ID: jack-cadence
    :END:

#+BEGIN_QUOTE
  JACK (JACK Audio Connection Kit) refers to an API and two
  implementations of this API, jack1 and jack2. It provides a basic
  infrastructure for audio applications to communicate with each other
  and with audio hardware. Through JACK, users are enabled to build
  powerful systems for signal processing and music production.
#+END_QUOTE

In other words, Jack provides an easy way to connect the audio from one
application to another. Using its C++ library we can easily make a
client that can take interface with the audio from other applications.

#+BEGIN_QUOTE
  Cadence is a set of tools useful for audio production.
#+END_QUOTE

Cadence is a set of tools that make using JACK much easier. I have never
been able to install JACK, nor use it without installing Cadence.

*** [[https://directory.fsf.org/wiki/Zita-convolver][Zita Convolver]]
    :PROPERTIES:
    :CUSTOM_ID: zita-convolver
    :END:

Install from libzita-convolver.

#+BEGIN_QUOTE
  Zita convolver is a C++ library implementing a real-time convolution
  matrix for up to 64 inputs and outputs. It uses multiple partition
  sizes to provide both low delay and efficient CPU use.
#+END_QUOTE

In other words, Zita Convolver is a very fast and simple way to apply an
impulse response to audio!

*** [[https://www.qt.io/][QT]]
    :PROPERTIES:
    :CUSTOM_ID: qt
    :END:

I wanted the tool to have a gui. QT is one that is cross-platform.
* Groebner Basis for Linear Network Coding in Sage :tech:
  :PROPERTIES:
  :CREATION-DATE: 2018-02-08
  :MODIFICATION-DATE: 2020-06-21
  :HASH:     ae12456198e3fd89347d198d2f8d8419
  :PREVIOUS-HASH: ae12456198e3fd89347d198d2f8d8419
  :END:
Backup of 
[[file:./html/Groebner_Basis.html]] 
Here is the pdf with better formatting: [[file:pdflib/GroebnerBasis--Sage.pdf][GroebnerBasis--Sage]]



#+BEGIN_SRC sh :exports results :results value html
#!/bin/bash
/bin/cat ./html/Groebner_Basis.html
#+END_SRC
** Figures
#+ATTR_ORG: :width 300
#+CAPTION: 
[[./img/sage0.png]]
#+ATTR_ORG: :width 300
#+CAPTION: 
[[./img/sage0(1).png]]
#+ATTR_ORG: :width 300
#+CAPTION: 
[[./img/sage0(2).png]]
#+ATTR_ORG: :width 300
#+CAPTION: 
[[./img/sage0(3).png]]
#+ATTR_ORG: :width 300
#+CAPTION: 
[[./img/sage0(4).png]]
#+ATTR_ORG: :width 300
#+CAPTION: 
[[./img/sage0(5).png]]
#+ATTR_ORG: :width 300
#+CAPTION: 
[[./img/sage0(6).png]]
#+ATTR_ORG: :width 300
#+CAPTION: 
[[./img/sage0(7).png]]
** CSS
[[./html/sagemath.css]]
* Transfer Functions in python :tech:
  :PROPERTIES:
  :CREATION-DATE: 2018-02-27
  :MODIFICATION-DATE: 2019-08-05
  :HASH:     632b50e6a0a4781d0dcc74ae9a10be90
  :PREVIOUS-HASH: 632b50e6a0a4781d0dcc74ae9a10be90
  :END:

All of this is based on
[[http://blog.codelv.com/2013/02/control-systems-in-python-part-1.html]]
. From 2013 to 2018, the python control library has improved a lot, so
now it is relatively easier to do multiple control operations, such as
ploting to root locus. This extends the code from frmdstryr to support
discrete time using 'z', instead of only continuous time using 's'.

This also shows an example of how to use it, by solving a problem from a
6.302 lab, a class from MIT.

#+BEGIN_SRC python
    INTERACTIVE_PLOT = True
    if INTERACTIVE_PLOT:
        %matplotlib notebook
        pass
    else:
        %matplotlib inline
        pass

    import sympy
    from sympy import *
    sympy.init_printing()
    s = Symbol('s')
    z = Symbol('z')

    from control import matlab
    from control import pzmap

    import matplotlib.pyplot as plt

    DEFAULT_DT = 0.001
    #Converts a polynomial in z to a transfer function
    def tfDiscrete(Ts, dt = DEFAULT_DT, *args, **kwargs):
        tfunc = Ts.simplify() #This is necessary, otherwise you can get float errors (the result is too inexact.)
        num = Poly(tfunc.as_numer_denom()[0],z).all_coeffs()
        den = Poly(tfunc.as_numer_denom()[1],z).all_coeffs()
        tf = matlab.tf(map(float,num),map(float,den), dt)
        return tf

    def tfCont(Ts, *args, **kwargs):
        tfunc = Ts.simplify() #This is necessary, otherwise you can get float errors (the result is too inexact.)
        num = Poly(tfunc.as_numer_denom()[0],s).all_coeffs()
        den = Poly(tfunc.as_numer_denom()[1],s).all_coeffs()
        tf = matlab.tf(map(float,num),map(float,den))
        return tf

    def tf(Ts, dt = DEFAULT_DT, *args, **kwargs):
        if len(Ts.free_symbols) > 1:
            raise ValueError('Too many free variables, ' + str(Ts.free_symbols) +
                             ' A transfer function is a polynomial in only s or z.')
        if len(Ts.free_symbols) < 1:
            raise ValueError('Too few variables.' 
                             'A transfer function is a polynomial in s or z.')
        if z in Ts.free_symbols :
            return tfDiscrete(Ts, dt, *args, **kwargs)
        elif s in Ts.free_symbols:
            return tfCont(Ts, *args, **kwargs)
        else:
            raise ValueError('A transfer function is a polynomial in s or z.'
                            'not one in ' + str(Ts.free_symbols))
    def pole(Ts, dt = DEFAULT_DT, *args,**kwargs):
        return matlab.pole(tf(Ts,dt),*args,**kwargs)

    def rlocus(Ts, dt = DEFAULT_DT, *args,**kwargs):
        plt.figure()
        matlab.rlocus(tf(Ts,dt),*args,**kwargs)
        plt.show()
        
    def bode(Ts, dt = DEFAULT_DT, *args,**kwargs):
        plt.figure()
        matlab.bode(tf(Ts,dt),*args,**kwargs)
        plt.show()
        
    def polezero(Ts, dt = DEFAULT_DT):
        plt.figure()
        pz = pzmap.pzmap(tf(Ts,dt))
        plt.show()
        return pz

    def damp(Ts, dt = DEFAULT_DT, *args,**kwargs):
        return matlab.damp(tf(Ts,dt),*args,**kwargs)
        
    def stepResponse(Ts, dt = DEFAULT_DT, *args,**kwargs):
        plt.figure()
        tfunc = tf(Ts,dt,*args,**kwargs)
        y,t = matlab.step(tfunc,*args,**kwargs)
        if(len(t)==len(y)): # Continuous time
            plt.plot(t,y)
            plt.title("Step Response")
            plt.grid()
            plt.xlabel("time (s)")
            plt.ylabel("y(t)")
            info ="Over Shoot: %f%s"%(round((y.max()/y[-1]-1)*100,2),'%')
            try:
                i10 = next(i for i in range(0,len(y)-1) if y[i]>=y[-1]*.10)
                Tr = round(t[next(i for i in range(i10,len(y)-1) if y[i]>=y[-1]*.90)]-t[i10],2)
            except StopIteration:
                Tr = "unknown"
            try:
                Ts = round(t[next(len(y)-i for i in range(2,len(y)-1) if abs(y[-i]/y[-1])>1.02 or abs(y[-i]/y[-1])<0.98)]-t[0],2)
            except StopIteration:
                Ts = "unknown"

            info += "\nRise Time: %s"%(Tr)
            info +="\nSettling time: %s"%(Ts)
            print info
            plt.legend([info],loc=4)
            plt.show()
        else: #discrete time 
            y = y[0] #unpack value
            t = [x*dt for x in range(len(y))]
            plt.plot(t, y)
            plt.title("Step Response")
            plt.grid()
            plt.xlabel("time (s)")
            plt.ylabel("y[t]")
            info ="Over Shoot: %f%s"%(round((y.max()/y[-1]-1)*100,2),'%')
            try:
                i10 = next(i for i in range(0,len(y)-1) if y[i]>=y[-1]*.10)
                Tr = round(t[next(i for i in range(i10,len(y)-1) if y[i]>=y[-1]*.90)]-t[i10],2)
            except StopIteration:
                Tr = "unknown"
            try:
                Ts = round(t[next(len(y)-i for i in range(2,len(y)-1) if abs(y[-i]/y[-1])>1.02 or abs(y[-i]/y[-1])<0.98)]-t[0],2)
                
            except StopIteration:
                Ts = "unknown"

            info += "\nRise Time: %s"%(Tr)
            info +="\nSettling time: %s"%(Ts)
            plt.legend([info],loc=4)
            plt.show()
    def impulseResponse(Ts, dt = DEFAULT_DT, *args,**kwargs):
        plt.figure()
        tfunc = tf(Ts,dt,*args,**kwargs)
        y,t = matlab.impulse(tfunc,*args,**kwargs)
        if(len(t)==len(y)): # Continuous time
            plt.plot(t,y)
            plt.title("Impulse Response")
            plt.grid()
            plt.xlabel("time (s)")
            plt.ylabel("y(t)")
            plt.show()
        else: #discrete time 
            y = y[0] #unpack value
            t = [x*dt for x in range(len(y))]
            plt.plot(t, y)
            plt.title("Impulse Response")
            plt.grid()
            plt.xlabel("time (s)")
            plt.ylabel("y[t]")
            #info ="Over Shoot: %f%s"%(round((y.max()/y[-1]-1)*100,2),'%')
            #plt.legend([info],loc=4)
            plt.show()
            
    def oscillationPeriod(Ts, dt = DEFAULT_DT, *args,**kwargs):
        a = pole(Ts,0.001)
        return 2*3.1415/max(a, key=lambda x: abs(x)).imag
#+END_SRC

#+BEGIN_SRC python
    Kp = Symbol('Kp')
    Kd = Symbol('Kd')
    Ki = Symbol('Ki')
    p = Symbol('p')
    P = Symbol('P')
    m = Symbol('m')
    gamma = Symbol('y')
    dt = Symbol('dt')

    ha2w = dt/(z-1)
    hc2a = gamma
    hw2th = dt/(z-1)
    hc2ap = (1-p) *(z**-1)/(1-p*z**-1)*gamma

    H = hc2a*ha2w*hw2th
    Hp = hc2ap*ha2w*hw2th

    actuator = H
    actuatorP = Hp

    controller = (Kp+Kd/(dt*m)-Kd/(dt*m)*z**(-m))
    sensor = P

    G=controller*actuator; 
    Gp=controller*actuatorP; 

    sys = G/(1+G*sensor)
    sysP = Gp/(1+Gp*sensor)

    sys = sys.simplify()
    sysP = sysP.simplify()

    pprint(sys)
    print("\n\n ------------------------- \n\n")
    pprint(sysP)
#+END_SRC

#+BEGIN_EXAMPLE
                  ⎛    m                 m⎞         
             dt⋅y⋅⎝Kd⋅z  - Kd + Kp⋅dt⋅m⋅z ⎠         
    ────────────────────────────────────────────────
           ⎛    m                 m⎞      m        2
    P⋅dt⋅y⋅⎝Kd⋅z  - Kd + Kp⋅dt⋅m⋅z ⎠ + m⋅z ⋅(z - 1) 


     ------------------------- 


                              ⎛    m                 m⎞             
                 dt⋅y⋅(p - 1)⋅⎝Kd⋅z  - Kd + Kp⋅dt⋅m⋅z ⎠             
    ────────────────────────────────────────────────────────────────
                   ⎛    m                 m⎞      m                2
    P⋅dt⋅y⋅(p - 1)⋅⎝Kd⋅z  - Kd + Kp⋅dt⋅m⋅z ⎠ + m⋅z ⋅(p - z)⋅(z - 1) 
#+END_EXAMPLE

#+BEGIN_SRC python
    #Calculating the value of p
    # N number of steps untill we are 50% done. 1 - p**n = 1/2. p = 1/2.*(1./n)
    n = 65.
    pval = 1/2.**(1/n)
    print pval 

    #We want the period to be 530 when Kp=10 and Kd=1
    #By trial and error:
    subs = {gamma:13.4, 
            Kp:10, 
            Kd:1, 
            Ki:0, 
            m:3, 
            P:1, 
            p:pval,  
            dt:0.001}

    print(oscillationPeriod(sysP.subs(subs),0.001))
#+END_SRC

#+BEGIN_EXAMPLE
    0.989392853996
    530.6524349460201
#+END_EXAMPLE

#+BEGIN_SRC python
    # Now we want to find the best Kp and Kd
    # Brute Force approach
    a=[]
    for kp in range(1,40):
        for kd in range(1,40):
            kpp = kp/2.
            kdd = kd/10.
            subs[Kp] = kpp
            subs[Kd] = kdd
            a.append((kpp,kdd,max(abs(pole(sysP.subs(subs),0.001)))))
    kpp, kdd , magnitude = min(a, key=lambda x: x[2])
    print (kpp, kdd , magnitude)

    # Non Bruteforce
    from scipy.optimize import minimize

    def func_min(x):
        kpp = x[0]
        kdd = x[1]
        subs[Kp] = kpp
        subs[Kd] = kdd
        return max(abs(pole(sysP.subs(subs),0.001)))

    x0 = [8, 1]
    res = minimize(func_min, x0, method='nelder-mead', options={'disp': True})
    print res
#+END_SRC

#+BEGIN_EXAMPLE
    (1.5, 0.6, 0.9965544944796353)
        
        Optimization terminated successfully.
             Current function value: 0.996489
             Iterations: 125
             Function evaluations: 237
     final_simplex: (array([[0.30518369, 0.26037023],
           [0.30511368, 0.26035043],
           [0.30511147, 0.26034981]]), array([0.99648941, 0.99648941, 0.99648943]))
               fun: 0.99648940643066
           message: 'Optimization terminated successfully.'
              nfev: 237
               nit: 125
            status: 0
           success: True
                 x: array([0.30518369, 0.26037023])
#+END_EXAMPLE

#+BEGIN_SRC python
    # Comparing both results
    print subs
    subs[Kp] = 1.5
    subs[Kd] = 0.6
    stepResponse(sysP.subs(subs), 0.001, T=[x*0.001 for x in range(3000)])
    impulseResponse(sysP.subs(subs), 0.001, T=[x*0.001 for x in range(3000)])
    bode(sysP.subs(subs),0.001)
    print polezero(sysP.subs(subs),0.001)


    subs[Kp] = 0.30533799
    subs[Kd] = 0.26041388
    stepResponse(sysP.subs(subs), 0.001, T=[x*0.001 for x in range(3000)])
    impulseResponse(sysP.subs(subs), 0.001, T=[x*0.001 for x in range(3000)])
    bode(sysP.subs(subs),0.001)
    print polezero(sysP.subs(subs),0.001)
#+END_SRC

#+BEGIN_EXAMPLE
    {Ki: 0, Kd: 0.26041388, m: 3, p: 0.9893928539959366, dt: 0.001, P: 1, Kp: 0.30533799, y: 13.4}
#+END_EXAMPLE


#+BEGIN_SRC sh :exports results :results value raw
#!/bin/bash
/bin/cat ./transfer-images.org 
#+END_SRC

#+BEGIN_EXAMPLE
    (array([ 0.99648939+0.00019111j,  0.99648939-0.00019111j,
            0.99648941+0.        j, -0.02267371+0.        j,
            0.01129919+0.02054887j,  0.01129919-0.02054887j]), array([-0.49941512+0.86501235j, -0.49941512-0.86501235j,
            0.99883023+0.        j]))
#+END_EXAMPLE
* Emacs drag-drop pdfs, paste html, custom templates               :projects:emacs:tech:
  :PROPERTIES:
  :CREATION-DATE: 2018-08-19
  :MODIFICATION-DATE: 2019-05-23
  :HASH:     890661c6074bd9e94e7ad15c1cb52487
  :PREVIOUS-HASH: 890661c6074bd9e94e7ad15c1cb52487
  :END:


** UPDATE:
This documents my first experience with programming in elisp. In restrospect, I was really bad at it. This post then shows that you can still make something with elisp even if you are bad at it.

A slightly better example of making something with elisp is on my package clipboard2org, a tiny package to paste html or picture. See [[https://github.com/itf/clipboard2org/blob/master/clipboard2org.el][clipboard2org]]

** PDF files drag-drop
   :PROPERTIES:
   :CUSTOM_ID: pdf-files-drag-drop
   :END:

 I wanted to be able to drag and drop pdf files, as well as drag and drop
 pdf URLs to emacs. The result of dragging should be to download the file
 to a directory under the same directory as the org file you are editing
 and then create a link to the file. It also allows for drag and drop of
 image files.

 The code was based on [[https://github.com/abo-abo/org-download][org download]]. If it is not a pdf, or if it is but the download fails, it
 fails back to the original drag and drop code.

 #+BEGIN_SRC emacs-lisp
    (defun org-file-copy-pdf (fname)
      (let* ((path (substring fname 5))
             (org-file-pdf-directory "./pdflib")
             (name (file-name-nondirectory (file-name-sans-extension path))))
        (make-directory org-file-pdf-directory :parents)
        (condition-case nill
            (copy-file (dnd-unescape-uri path) (expand-file-name (format "%s.pdf" name) org-file-pdf-directory))
          (error
           ())
          )
        (file-relative-name (expand-file-name (format "%s.pdf" name) org-file-pdf-directory) "./"))
      )

    (defun org-file-insert (fname)
      (let* ((img-regexp "\\([pP][nN][gG]\\|[jJ][pP][eE]?[gG]\\)\\>")
             (pdf-regexp  "\\([pP][dD][fF]\\)\\>"))
        (cond  
         ((string-match img-regexp fname)
          (insert "#+ATTR_ORG: :width 300\n")
          (insert (concat  "#+CAPTION: "  "\n"))
          (insert (format "[[%s]]" fname))
          (org-display-inline-images t t))
         ((string-match pdf-regexp fname)
          (insert (format "[[file:%s][%s]]\n"  (org-file-copy-pdf fname) (file-name-nondirectory (file-name-sans-extension path)))))
         (t (insert (format "[[%s]]\n" fname))
            )
         )
        )
      )

    (defun org-file-dnd-fallback (uri action)
      (let ((dnd-protocol-alist
             (rassq-delete-all
              'org-file-dnd-protocol
              (copy-alist dnd-protocol-alist))))
        (dnd-handle-one-url nil action uri)))

    (defun org-file-dnd-protocol (uri action)
      (cond ((eq major-mode 'org-mode)
             (condition-case nil
                 (org-file-insert uri)
               (error
                (org-file-dnd-fallback uri action))))
            (t
             (org-file-dnd-fallback uri action))))


    (add-to-list 'dnd-protocol-alist '("^file:" .  org-file-dnd-protocol))


    (require 'url)

    (defun org-file-pdf-url-insert (url)
      (let* ((org-file-pdf-directory "./pdflib")
             (name (file-name-nondirectory url))
             (path (expand-file-name (file-name-nondirectory url) org-file-pdf-directory))
             (relative-path (file-relative-name path "./")))
        (make-directory org-file-pdf-directory :parents)
        (url-copy-file url path t)
        (insert (format "[[file:%s][%s]]\n"  relative-path name)))
      )

    (defun org-file-pdf-url-dnd-fallback (uri action)
      (let ((dnd-protocol-alist
             (rassq-delete-all
              'org-file-pdf-url-dnd-protocol
              (copy-alist dnd-protocol-alist))))
        (dnd-handle-one-url nil action uri)))

    (defun org-file-pdf-url-dnd-protocol (uri action)
      (cond ((eq major-mode 'org-mode)
             (condition-case nil
                 (org-file-pdf-url-insert uri)
               (error
                (org-file-pdf-url-dnd-fallback uri action))))
            (t
             (org-file-pdf-url-dnd-fallback uri action))))


    (add-to-list 'dnd-protocol-alist '("^https?.*\\.pdf" .  org-file-pdf-url-dnd-protocol))

 #+END_SRC

** Custom easy templates
   :PROPERTIES:
   :CUSTOM_ID: custom-easy-templates
   :END:

 Easy templates cannot run arbitrary code. They are handled by org-cycle,
 which is a function that handles every action that TAB performs in org
 mode.

 So, I created a function and added an advice to org-cycle, This detects
 strings of the type "=>[a-zA-Z]+=", i.e. > followed by letters and then
 runs a function.

 In order to create other templates, add another block similar to

 #+BEGIN_SRC emacs-lisp
    ((string= key "t")
    (insert-todays-date)
    t)
 #+END_SRC

 under it.

 This particular template inserts today's date when someone writes >t and
 presses tab.

 #+BEGIN_SRC emacs-lisp
    (defun insert-todays-date ()
      (interactive)
      (insert (format-time-string "<%Y-%m-%d>")))

    (defun org-try-my-template-function (&optional arg)
        "Try to complete a structure template before point.
    This looks for strings like \"<e\" on an otherwise empty line and
    expands them."
        (interactive)
        (let ((l (buffer-substring (point-at-bol) (point)))
          a)
          (if (and (looking-at "[ \t]*$")
               (string-match "^[ \t]*>\\([a-zA-Z]+\\)$" l))
              (let* ((key (match-string 1 l))
                     (start  (point-at-bol))
                     (end (point)))
                (when
                    (cond
                     ((string= key "t")
                      (insert-todays-date)
                      t)
                     )
                  (delete-region start end)
                  t)
                ))))


    (require 'org)
    (with-eval-after-load 'org 
      (advice-add #'org-cycle :before-until   #' org-try-my-template-function))
 #+END_SRC

** Pasting HTML in org mode
   :PROPERTIES:
   :CUSTOM_ID: pasting-html-in-org-mode
   :END:

 This was inspired by
 [[https://emacs.stackexchange.com/questions/12121/org-mode-parsing-rich-html-directly-when-pasting][this stack overflow question]]. It suggested using =xclip= to access the
 clipboard.

 The problem is that =xclip= causes emacs to hang, because it forks a
 child that keeps stdout open. So instead, one can use the emacs backed
 for getting the xselection from the clipboard.

 This code requests a text/html selection and checks if it exists. If it
 exists, it first decodes it using whatever encoding was being used, and
 then uses pandoc to convert the html to org mode.

 #+BEGIN_SRC emacs-lisp
    (defun html2org-clipboard ()
      "Convert clipboard contents from HTML to Org and then paste (yank)."
      (interactive)
      (let* (
           (text_html (gui-backend-get-selection 'PRIMARY 'text/html))
           (text_raw (gui-get-selection)) 
           (text_html (when text_html
                        (decode-coding-string text_html 'unix)))
           (text_html (when text_html
                        (shell-command-to-string (concat "echo "  (shell-quote-argument text_html) "|timeout 2  pandoc -f html-native_divs-native_spans -t org"))))
           (text (or text_html
                   text_raw))
           )
        (progn  (kill-new text) (yank))))


    (with-eval-after-load 'org 
      (define-key org-mode-map (kbd "C-y ") 'html2org-clipboard)
      (define-key org-mode-map (kbd "C-<tab>") '(lambda() (interactive) (save-excursion  (org-back-to-heading)
                                                                      (org-cycle))))
      )
 #+END_SRC
* Self studying mathematics :personal:noexport:
  I've started reading Topology by james munkres, and the explanations there are very verbose and easy to follow. 
* Simple proof weak master theorem :tech:
  :PROPERTIES:
  :CREATION-DATE: 2018-09-12
  :MODIFICATION-DATE: 2018-09-12
  :HASH:     ce3f5fa79fa6f23e0bb4e887dbd5f744
  :PREVIOUS-HASH: ce3f5fa79fa6f23e0bb4e887dbd5f744
  :END:

For a 006 student piazza question. Te student liked my answer so I decided to share!

** Work per level:


Suppose you have:


$$T(n) = a T(n/b) + n^c$$


The amount of work done on the root of the tree is:


$$n^c$$.


The amount of work done in the next level is:


$$n^c \frac{a}{b^c}$$


so on the $i^{th}$  level, considering the root to be level 0, is:


$$n^c \left(\frac{a}{b^c}\right)^i$$



** Number of levels

Given that the size of an element of the tree decreases by $b$ in each level, e.g. $n$ -> n/b, n/b^2...

An element of the tree will have size 1 at the level:
$$\log_bn$$




** Total work on the tree


The total amount of work on the tree is therefore:


$$\sum_{i=0}^{\log_bn} n^c \left(\frac{a}{b^c}\right)^i = n^c \sum_{i=0}^{\log_bn} \left(\frac{a}{b^c}\right)^i $$


This naturally leads to 3 cases:


$$ \left(\frac{a}{b^c}\right) >1$$

$$ \left(\frac{a}{b^c}\right) = 1$$

$$ \left(\frac{a}{b^c}\right) < 1$$




** Case 1: $$\frac{a}{b^c}<1$$


You have a geometric series of ratio < 1:


$$n^c \sum_{i=0}^{\log_bn} \left(\frac{a}{b^c}\right)^i \le n^c <br/> \sum_{i=0}^{\infty} \left(\frac{a}{b^c}\right)^i = n^c \frac{1}{1-\left(\frac{a}{b^c}\right)}$$


And this new term is just a constant


So:


$$\theta ( n^{c})$$

** Case 2: $$\frac{a}{b^c}=1$$


Now the amount of work per level is the same, so:


$$n^c \sum_{i=0}^{\log_bn} \left(\frac{a}{b^c}\right)^i= n^c \sum_{i=0}^{\log_bn} 1 = n^c \log_bn $$



** Case 3: $$\frac{a}{b^c}>1$$


The easiest way to deal with this case is to simply turn the tree upside down.


The amount of work done at the leaves of the tree is the same as the number of leaves on the tree, which is:


$$a^{\log_b n} = \left(b^{\log_ba} \right)^{\log_bn} = \left(b^{\log_bn} \right)^{\log_ba} = n^{\log_ba}$$


At every level above the leaves, the amound of work is multiplied by


$$\frac{1}{\frac{a}{b^c}} = \frac{b^c}{a}$$


So the total amount of work done in the tree is:


$$ \sum_{i=0}^{\log_bn} n^{\log_ba} \left(\frac{b^c}{a}\right)^i = n^{\log_ba} \sum_{i=0}^{\log_bn} \left(\frac{b^c}{a}\right)^i $$

$$\le n^{\log_ba} \sum_{i=0}^{\infty} \left(\frac{b^c}{a}\right)^i = n^{\log_ba} \frac{1}{1-\left(\frac{b^c}{a}\right)}$$


And similar to the first case, this is simply


$$\theta ( n^{\log_ba})$$
* Export subtree with files :projects:emacs:tech:
  :PROPERTIES:
  :CREATION-DATE: 2018-09-13
  :MODIFICATION-DATE: 2019-05-23
  :HASH:     473a8b4668da4dd99727b6c7a2616249
  :PREVIOUS-HASH: 473a8b4668da4dd99727b6c7a2616249
  :END:

** Update:
Now this is on on github, in the repo [[https://github.com/itf/org-export-with-files][org-export-with-files]]. It is fairly usable and fairly useful. The next step is to figure out how to best deal with custom links.

** Summary
I have a main org files that contains notes for multiple classes and papers in different headlines. It is very easy to use this org file to find information since every note contains links to the relevant papers.

However, sharing this file with someone can be challenging, since I just want to share the relevant notes/papers and not everything that is linked by this file.

The code below solves this problem. It creates a hard link of every file linked by the specific headline into the export directory and fixes all the links in the exported pdf so that it points to the relative location of those files.

This allows me to quickly generate a folder that contains all the files I wanna share as well as a pdf that allows the other person to easily navigate through the files and see the relevant information.

** Warning:
   The file links when exporting to latex need to be of the form [[file:file] [name of the link]]. I other words, they need a description. Links without descriptions are interpreted as images, even if they have extensions such as pdf.
** Code
#+BEGIN_SRC emacs-lisp 
(require 'ox)


(defun export-with-files-export (&optional directory-name)
  (interactive)
  (let ((directory-name (or directory-name (read-directory-name "Directory:"))))
    (make-directory directory-name t)
    (widen)
    (org-narrow-to-subtree)
    
    ;;Create copy of the 
    (org-export-with-buffer-copy
     (let* ((ast (org-element-parse-buffer)))
       (org-element-map ast 'link
         (lambda (link)
           (export-with-files--fix-file-external-link-ast directory-name link)))
       
       
       ;;Convert the buffer to contain the new AST, 
        ;;this is needed because the exporter expects the content to be in a buffer
       (erase-buffer) 
       (insert (org-element-interpret-data ast))
       
       (outline-show-all)
       (goto-char (point-min))
       (let* ((file-name  (export-with-files--escaped-headline))
              (new-file-name (concat directory-name file-name)))
         ;; Make the buffer file be in the new directory, because
         ;; org-latex-export-to-pdf always export to the working directory of the buffer
         (set-visited-file-name (concat new-file-name ".org"))

         ;; Name of the tex file / pdf file
         (org-set-property
          "EXPORT_FILE_NAME"
          file-name)
         (deactivate-mark)
        (org-latex-export-to-pdf nil t)))))
  (widen))
     


(defun export-with-files--fix-file-external-link-ast (directory-path link)
  "Creates hard links to the external files in the output directory"
  (when (string= (org-element-property :type link) "file")
    (let* ((path (org-element-property :path link))
           (extension (file-name-extension path))
           (link-copy (org-element-copy link))
           (img-extensions '("jpg" "tiff" "png" "bmp"))
           (link-description (org-element-contents link))
           ;; Put files in subdirectories with the extension of the file
           (new-relative-path 
            (concat "./" extension "/" (file-name-nondirectory path)))
           (new-hard-link-path (concat directory-path new-relative-path))
           (new-hard-link-directory (file-name-directory new-hard-link-path)))
      
      ;;Fix the AST
      ;;If image, remove description so it will become a real image instead of a link
     (unless (or (member extension img-extensions) (not link-description))
      (apply #'org-element-adopt-elements link-copy link-description))
      (org-element-put-property link-copy :path new-relative-path)
      (org-element-set-element link  link-copy)
      
      ;;Create hard link folder
      (make-directory new-hard-link-directory t)
      ;;Create hard link, not replacing if it already exists, catching error if file does not exist
      (condition-case nil
          (add-name-to-file path new-hard-link-path nil)
        (error nil)))))



(defun export-with-files--escaped-headline ()
  (export-with-files--escape
   (nth 4 (org-heading-components))))

(defun export-with-files--escape(text)
  (replace-regexp-in-string "[\\?.,!:]" ""
   (replace-regexp-in-string "/" "-" 
    (replace-regexp-in-string " " "_" text))))
#+END_SRC
* Scan notes with laptop webcam :tech:
  :PROPERTIES:
  :CREATION-DATE: 2018-09-16
  :MODIFICATION-DATE: 2020-06-28
  :HASH:     27e7c746b336adb182ddadfe1a117414
  :PREVIOUS-HASH: 27e7c746b336adb182ddadfe1a117414
  :END:
  

I was solving a pset, and realized that I needed to draw a graph by hand and include it in my solution. I didn't want to deal with taking a picture with my phone and sending the picture to my computer in order to use it. I wanted to be able to quickly scan it using my webcam. 

So I decided to write a scrip to just do that, I press Ctrl-Print and the magic happens!

It sets my screen brightness to max. Takes a pic with my webcam. Sets the screen brightness to where it was.  Prompts me to crop the picture it took. Uses [[http://www.fmwconcepts.com/imagemagick/textcleaner/index.php][textcleaner]] to clean the picture up. And at last, it automatically inserts the picture in my org document, and displays the picture.

In other words, a quick and dirty scanner with computer screen flash to scan papers.
** Controlling the brightness 

First I needed to allow me to control the brightness without sudo. Here I added my group as a group with permissions to edit the brightness.
   
#+BEGIN_SRC sh
sudo chgrp ivanaf /sys/class/backlight/intel_backlight/brightness
sudo /bin/chmod g+w  /sys/class/backlight/intel_backlight/brightness
 #+END_SRC

Then I could just use 
#+BEGIN_SRC sh
echo brightness /sys/class/backlight/intel_backlight/brightness
#+END_SRC
** Taking the picture
   I use pygame to take the picture.
   #+include: "packages/webcamscan/webcam.py"  src python 
** Cropping the picture
Again, I use pygame, using the code from these online answers: 
https://coderwall.com/p/hmp8uw/image-cropping-using-pygame
https://stackoverflow.com/questions/6136588/image-cropping-using-python/8696558 

 #+include: "packages/webcamscan/crop.py"  src python 
** Cleaning the image
To clean the image, I was trying to remove the background by blurring the image, and dividing the original image by the blurred one.

This method is very effective. However, I found something even better, [[http://www.fmwconcepts.com/imagemagick/textcleaner/index.php][Fred's ImageMagick Scripts for text cleaning]].

** Putting it all together
 #+include: "packages/webcamscan/orgscan.el"  src elisp 
** Results:

Here is a "scan" of the back of the mit career fair book from last year, taken in my dark room.

#+ATTR_ORG: :width 600
#+CAPTION: 
[[file:/home/ivanaf/org/blog/source/scan/15370864184127958.jpg][file:/home/ivanaf/org/blog/source/scan/15370864184127958.jpg]]  

Which is about as good as possible, give the quality of the light / camera. 
* Solving a problem set with orgmode :tech:
  :PROPERTIES:
  :CREATION-DATE: 2018-09-17
  :MODIFICATION-DATE: 2019-02-28
  :HASH:     a0ce3217eed18666d381de2b52d72e65
  :PREVIOUS-HASH: a0ce3217eed18666d381de2b52d72e65
  :END:
  After I wrote my last two tiny projects, [[Scan notes with laptop webcam][Scan with webcam]], and [[Export subtree with files][Export Subtree with files]] I was ready to do one of my psets in org mode. It was absolutely fantastic.

Scanning images with my webcam made it very easy and fast to simply add diagrams to my solutions, such as the following.

 #+ATTR_ORG: :width 600
 #+attr_latex: :float nil
 #+CAPTION: 
 [[file:/home/ivanaf/org/scan/15371305333151052.jpg][file:/home/ivanaf/org/scan/15371305333151052.jpg]]


Being able to run arbitrary code during export allowed me to very easily generate matrices and perform matrix multiplication using sympy. For example:

 #+NAME: matrix_mult
        #+BEGIN_SRC python  :results output raw :exports both  
from sympy import I
from sympy import latex
from sympy.matrices import *
import sys
i=I

sigmax = Matrix([[0,1],[1,0]])
sigmay = Matrix([[0,-i],[i,0]])
sigmaz = Matrix([[1,0],[0,-1]])

print("\\begin{alignat*}{3}")
print( "\\\\ \sigma_{x} \sigma_{x} &=" + latex(sigmax) + latex(sigmax) +" &&= " + latex(sigmax*sigmax) )
print( "\\\\ \sigma_{y} \sigma_{y} &=" + latex(sigmay) + latex(sigmay) +" &&= " + latex(sigmay*sigmay) )
print( "\\\\ \sigma_{z} \sigma_{z} &=" + latex(sigmaz) + latex(sigmaz) +" &&= " + latex(sigmaz*sigmaz) )

print( "\\\\ \sigma_{x} \sigma_{y} &=" + latex(sigmax) + latex(sigmay) +" &&= " + latex(sigmax*sigmay) )
print( "\\\\ \sigma_{y} \sigma_{z} &=" + latex(sigmay) + latex(sigmaz) +" &&= " + latex(sigmay*sigmaz) )
print( "\\\\ \sigma_{z} \sigma_{x} &=" + latex(sigmaz) + latex(sigmax) +" &&= " + latex(sigmaz*sigmax) )

print( "\\\\ \sigma_{y} \sigma_{x} &=" + latex(sigmay) + latex(sigmax) +" &&= " + latex(sigmay*sigmax) )
print( "\\\\ \sigma_{z} \sigma_{y} &=" + latex(sigmaz) + latex(sigmay) +" &&= " + latex(sigmaz*sigmay) )
print( "\\\\ \sigma_{x} \sigma_{z} &=" + latex(sigmax) + latex(sigmaz) +" &&= " + latex(sigmax*sigmaz) )
print("\\\\ \\end{alignat*}")
        #+END_SRC

        #+RESULTS: matrix_mult
        \begin{alignat*}{3}
        \\ \sigma_{x} \sigma_{x} &=\left[\begin{matrix}0 & 1\\1 & 0\end{matrix}\right]\left[\begin{matrix}0 & 1\\1 & 0\end{matrix}\right] &&= \left[\begin{matrix}1 & 0\\0 & 1\end{matrix}\right]
        \\ \sigma_{y} \sigma_{y} &=\left[\begin{matrix}0 & - i\\i & 0\end{matrix}\right]\left[\begin{matrix}0 & - i\\i & 0\end{matrix}\right] &&= \left[\begin{matrix}1 & 0\\0 & 1\end{matrix}\right]
        \\ \sigma_{z} \sigma_{z} &=\left[\begin{matrix}1 & 0\\0 & -1\end{matrix}\right]\left[\begin{matrix}1 & 0\\0 & -1\end{matrix}\right] &&= \left[\begin{matrix}1 & 0\\0 & 1\end{matrix}\right]
        \\ \sigma_{x} \sigma_{y} &=\left[\begin{matrix}0 & 1\\1 & 0\end{matrix}\right]\left[\begin{matrix}0 & - i\\i & 0\end{matrix}\right] &&= \left[\begin{matrix}i & 0\\0 & - i\end{matrix}\right]
        \\ \sigma_{y} \sigma_{z} &=\left[\begin{matrix}0 & - i\\i & 0\end{matrix}\right]\left[\begin{matrix}1 & 0\\0 & -1\end{matrix}\right] &&= \left[\begin{matrix}0 & i\\i & 0\end{matrix}\right]
        \\ \sigma_{z} \sigma_{x} &=\left[\begin{matrix}1 & 0\\0 & -1\end{matrix}\right]\left[\begin{matrix}0 & 1\\1 & 0\end{matrix}\right] &&= \left[\begin{matrix}0 & 1\\-1 & 0\end{matrix}\right]
        \\ \sigma_{y} \sigma_{x} &=\left[\begin{matrix}0 & - i\\i & 0\end{matrix}\right]\left[\begin{matrix}0 & 1\\1 & 0\end{matrix}\right] &&= \left[\begin{matrix}- i & 0\\0 & i\end{matrix}\right]
        \\ \sigma_{z} \sigma_{y} &=\left[\begin{matrix}1 & 0\\0 & -1\end{matrix}\right]\left[\begin{matrix}0 & - i\\i & 0\end{matrix}\right] &&= \left[\begin{matrix}0 & - i\\- i & 0\end{matrix}\right]
        \\ \sigma_{x} \sigma_{z} &=\left[\begin{matrix}0 & 1\\1 & 0\end{matrix}\right]\left[\begin{matrix}1 & 0\\0 & -1\end{matrix}\right] &&= \left[\begin{matrix}0 & -1\\1 & 0\end{matrix}\right]
        \\ \end{alignat*}

So in the end I could solve my problem set very efficiently, without having to work around the tools I was using.


* Scan notes with webcam online (incomplete) :tech:
:PROPERTIES:
:CREATION-DATE: 2019-02-28
:MODIFICATION-DATE: 2019-04-21
:HASH:     1d51247812d8510a436640119f20a46b
:PREVIOUS-HASH: 1d51247812d8510a436640119f20a46b
:END:
In the same way that I can scan my notes when in emacs using the Webcam of my laptop, I want my students to do the same. 
So I decided to port my note scanner to javascript. 
* Organizing an IAP class                                          :story:personal:
  :PROPERTIES:
  :CREATION-DATE: 2019-04-21
  :MODIFICATION-DATE: 2019-04-21
  :HASH:     f3e096533dd0dfc14d830c8b750c79e0
  :PREVIOUS-HASH: f3e096533dd0dfc14d830c8b750c79e0
  :END:
This IAP others 6.006 TAs and I organized 6.s092!

Mid semester I went to a SIPB meeting where they were discussing IAP classes and I decided that I decided that organizing a class would be a great idea. I convinced other 6.006 TAs to join and then said on the following sipb meeting we were doing it!


Among encouraging words such as "why?" "that is a terrible idea" and "oh jeez", we decided to move forward!


and then ex 6.006 students came to help us as well!


Organizing a class is interesting! You need to decide things such as what classroom size will I need? How do I advertise the class? How do we decide on the grades? What are the topics of each lecture, of each pset? How do I distribute work for people? And so on.


We started with a room that could fit 50 people since who takes IAP classes taught by randoms, amiright? A few people were signing up for it since it was in the EECS website. But then everything changed:


We sent a silly email to dormspam

#+BEGIN_QUOTE

  Take the crash course in 6.006, first time ever being offered! It will
  be a blast! This class, taught by 6.006 TAs, will try to cover all the
  6.006 material over IAP.

  Listen to the encouraging words we heard when we decided to organize
  this class:

  /"This is a terrible idea"/ /"Good luck, you will need it" "Why?"/

  6.006 is an awesome 12 units class in algorithms and now you can take
  it in 12* hours! One hour per original unit! That is a steal!!**

  \ast (12 hours of lectures) + pset time.

  \ast\ast You won't get 6.006 credit by taking this class though.

#+END_QUOTE


Then in the end we got to 140 people and everyone was freaking out since that is a lot of people haha. We had to get bigger rooms, office hours rooms, microphones and etc. We were glad we didn't make elevator posters. In the end most people didn't show up to most of the lectures, so nothing matters.


Since I'm super disorganized I though that trying to be the main person organizing the class would be a great learning experience.


To continue the path of terrible ideas, I decided that 30 psets over IAP seemed liked a great idea, together with the topic and objectives of each pset and lectures they went with.  We have so many people helping with the class, what could go wrong? Also auto graded psets are not realy psets right?
\\

Well....


Turns out that delegating things and organizing people is really hard! I thought that as long as we have a list of exactly what needs to be done and by when and people excited, things will get done.  was I wrong....



In the first week of January after I had written 2 psets and setup a catsoop server and written example psets and guides to write questions and all, I had decided to give up and cancel the class, since no one else was helping with the class yet.


I told JJ about this and she took over with an iron fist (just kidding, she was totally awesome and nice).


She messaged each person individually rather than messaging the group. She asked people to signup for tasks on the spot and did decided on reasonable (much shorter term) deadlines. And she met with people who wanted to help in person to make them feel more involved as well.


Everything went super smoothly after that, I gotta say I learned a lot from seeing her organizing people much better than me.



And now, lessons from the class, from an instructors perspective:

\\

-- /No one solves psets unless they have short term deadlines/.


All of our psets had fake deadlines just to make students do them. If you give them the real deadline and it is a few weeks later, no one will do them.

We told the students all extensions would be approved but that they'd need to write us an email asking for them. Students hate writing emails so this was basically equivalent to a hard deadline.

secret: most classes have fake deadlines as well. The real deadline might be 15 minutes later, 1 day later or 2 weeks later depending on the class, because we hate having to deal with real extensions; fake extensions are much easier to deal with.  This is true for all classes I've helped with. No, you will not know the real deadline as a student;
the deadline is fake to help the students.


Fake extensions mean: we can't even distinguish if you submitted it by the real extension or fake extension.

\\

-- /I can tell you guys are confused, but we are aiming for 70% understanding because of time constraints. Please, please, please use piazza and office hours, sorry the lecture is so short./

\\

It is not hard to notice when students start feeling confused and to feel dumb when you have to move quickly on part of the material because you have a lot to cover. In a recitation you can simply decide to cover less material since most of it is review; but during a lecture you have to follow your syllabus.  It is not the students fault, but more that we have a limited amount of time for lecture.



If we start mentioning or emailing out about office hours, piazza, etc. It is probably because we noticed people confused and we have more time available after the class time.

\\

-- /No one gives feedback. No one talks to the instructors/

Even though it is not that hard to tell if people are confused in a particular moment during the class, it is really hard to tell if people are enjoying the class or how much of it they are understanding.



As an instructor / TA in previous semesters, the thing we want the most is for the students to give feedback, be it good or bad. If we reach the point of directly asking for feedback a few times, it means that we are pretty desperate and have no clue how we are doing.



I still don't know if people enjoyed the psets we wrote in January or found them useful, because no one said anything yet. So I'm just waiting for course evals.


As a short story, a friend of mine told an instructor I TAed with that we was rude on Piazza. He improved a lot in the following weeks

\\

-- /No one fills up course evals/


Since no one gives feedback, we just get really excited about course evals, because it is the one time people might finally say something. But no. No one fills up course evals unless you bother them like, 20 times.  We only sent 3 emails + 1 in class announcement + 1 piazza post. So we had a 10% course eval filling rate.

Yeah, that is why instructors bother everyone so much with course evals or make people fill them up during lecture: no one cares enough to fill them up.

\\

-- /Instructors generally don't know what they are doing/

This is true also for the classes I was a TA for. We are doing our best, but since most of the feedback only come through course evals, unless the same instructor is teaching the same class for the second or third time, they are just hoping for the best and not having any clue if things are going well or bad.


For example, if a single student tells an instructor that they like / dislike teal classes, this might very likely become the single reason a class starts being teal/stops being teal. This might or might not have been based in a real story lol.



One student told me that they liked the 6.s092 psets, so that is why I wrote extra optional pset questions for example.

\\

-- /Making it hard to get 100% is so fun!/\\

This part is a bit evil. But as soon as some of the students in 6.s092 got 100% in the psets, I released a new very hard pset worth 0.03% of the grade. Which means that if they didn't do it, they'd only get a 99.97% average.


That is why sometimes there is extra credit or a single very hard question not worth much. We just want people to try to get even better!

 --


So yeah, it was exciting. Since I suck at organizing people I've decided that I'll be a grade Czar this semester (yes, that is my title in 6.042 lol. I'm responsible for organizing 25 graders and delegating tasks to make sure that all psets get graded in time.) This will be a disaster but I'll try my best. If you know anyone in 6.042 during the semester
complaining that their pset grades are late, it will be my fault.

* Baby white-woodpeckers are dumb :story:personal:
  :PROPERTIES:
  :CREATION-DATE: 2019-04-21
  :MODIFICATION-DATE: 2019-04-21
  :HASH:     2e21149a8fcaf913c909926dfd01cfc9
  :PREVIOUS-HASH: 2e21149a8fcaf913c909926dfd01cfc9
  :END:
So during my life I have helped take care of multiple birds (bem-te-vis, parrots, toucans, large hawks, tiny hawks, vultures, sparrows, doves, humming birds, canaries, woodpeckers, etc), usually baby ones who had their family killed by teenagers/hunters/superstitious people/fire, or old ones who were injured by electric fences/teenagers/people cutting their wings to sell, etc.  It is a long story...


For the longest time I though that doves were the dumbest birds. We could take care of them for multiple weeks while they recovered, but even past those weeks they'd still be really scared of us and would try to escape through a wall.  They never manage to learn that we were not a threat, and that they couldn't escape through a wall.

But now in January when I was back in my hometown, I helped take care of 2 baby white-woodpeckers. And they were a quite interesting bunch.

They also could not learn that we were not a threat, but, different from doves, they were not trying to fly through walls. They had this amazing concept on their minds that if they can't see you, you can't see them.

In good days, they'd try to find a corner to hide their head, or they'd try to hide their head under something. However, most times they'd just put their heads down while in the middle of the floor, in the middle of everything and try very hard to not look at you.

They also had very interest concepts about food. If the food is at their eye level, it is food.  Holding beetles' larvae at their eye level height with pincers was the way to go, as well as a mix of bird + dog food crunched and mixed together with water, that usually works really well for young birds.

However as soon as food falls below their eye level, it is not food anymore.
baby woodpecker: Do you know this chunky larva crawling around on my feet? it''s always been there. There is no food near me.


One of them would also constantly attack the other sibling. The other sibling would follow the "if I can't see you, you can't see me" and hide its head. It would usually hide its head under the closest thing to it, which was its sibling who was attacking. It was not very effective.


Interesting enough, if you separated both of them, they'd both try to get together, even though one of them was almost getting killed by the other.

We released them after 2 weeks, and after a few days of acclimatizing to the place they were going to be released ( we keep them in a very large bird cage thing, like 10 feet by 30 feet by 20 feet in the location. I think it is called a vivarium in English?).

The attacker sibling survived, the one being attacked disappeared after 2 days.

I hope that the one who survived has found nice places to hide its head every time it gets scared.
* Tikz snippet preview in orgmode :emacs:tech:
  :PROPERTIES:
  :CREATION-DATE: 2019-05-09
  :MODIFICATION-DATE: 2019-05-18
  :HASH:     7d68e358e08e556ec4dcb3f6807510e7
  :PREVIOUS-HASH: 7d68e358e08e556ec4dcb3f6807510e7
  :END:
For some reason, in my installation, both dvipng, and imagemgick don't work when using tikz, with errors such as the following when using a latex src block,
#+BEGIN_quote
org-compile-file: File "/tmp/babel-aqvAMK/latex-Ehm75V.pdf" wasn’t produced.  See "*Org PDF LaTeX Output*" for details
#+END_quote
Or the image was simply not showing up.


My solution was to set use dvisvgm

#+BEGIN_SRC emacs-lisp 
(setq org-preview-latex-default-process 'dvisvgm)
#+END_SRC

This allows me to simply insert tikz code in my file, and the latex fragment will display it, as long as I have added the necessary header.

#+BEGIN_SRC org
#+latex_header: \usepackage{tikz}
#+END_SRC


#+HEADER: :file ./svg/example.svg 
#+HEADER: :results output raw :headers '("\\usepackage{tikz}")
#+HEADER: :fit yes :exports both
#+BEGIN_src latex
\begin{tikzpicture}
\draw[->] (-3,0) -- (-2,0) arc[radius=0.5cm,start angle=-180,end angle=0] (-1,0) -- (1,0) arc[radius=0.5cm,start angle=180,end angle=0] (2,0) -- (3,0);
\filldraw (-1.5,0) circle[radius=1mm];
\filldraw (1.5,0) circle[radius=1mm];
\end{tikzpicture}
#+END_SRC

#+RESULTS:
[[file:./svg/example.svg]]



It is also considerably faster than using dvipng, at least on my machine. 


If you want to use the image in your html export, instead of your pdf export, you can create a .svg folder, and then run the following:

#+BEGIN_SRC org
#+HEADER: :file ./svg/example.svg 
#+HEADER: :results output raw :headers '("\\usepackage{tikz}")
#+HEADER: :fit yes 
#+BEGIN_src latex
\begin{tikzpicture}
\draw[->] (-3,0) -- (-2,0) arc[radius=0.5cm,start angle=-180,end angle=0] (-1,0) -- (1,0) arc[radius=0.5cm,start angle=180,end angle=0] (2,0) -- (3,0);
\filldraw (-1.5,0) circle[radius=1mm];
\filldraw (1.5,0) circle[radius=1mm];
\end{tikzpicture}
,#+END_SRC 
#+END_SRC 
* Emacs Tramp asking for password :emacs:tech:
:PROPERTIES:
:CREATION-DATE: 2019-05-21
:MODIFICATION-DATE: 2019-05-23
:HASH:     bc831ce8b3458f76e357e2f9ee4f7efd
:PREVIOUS-HASH: bc831ce8b3458f76e357e2f9ee4f7efd
:END:
For about a week, every time I initialized emacs, Tramp would constantly ask for my password, both for =sudo= and for =ssh=.

This means that in the recent file list there is a sudo file or a ssh file, and everytime emacs initialize, it is trying to load this list (which requires it to re-ask for the password if it is not saved). 

If this happens to you, the easiest fix is to clean the recent file lists by running:

#+BEGIN_SRC emacs-lisp 
(setq session-file-alist ())
(setq file-name-history ())
#+END_SRC
* Disqus and javascript random thoughts :tech:
:PROPERTIES:
:CREATION-DATE: 2019-05-23
:MODIFICATION-DATE: 2019-05-23
:HASH:     ec1b8c7dd1dbdcad039aaf16f05b4074
:PREVIOUS-HASH: ec1b8c7dd1dbdcad039aaf16f05b4074
:END:
I want this blog to be really light, so, if you've noticed, it doesn't load any javascript when you access it.  

I've had to deal with slow internet connections or very tiny data caps enough times that I would strongly dislike making people load data that they might not be interested just to improve engagement or something.

If you want to read and write comments, you need to click on the comments button in order to load the Disqus javascript.

And talking about Disqus, I've discovered today that by default Disqus does not allow guests to comment. You need to create an account in order to coment. I've just disabled this here, so it should be easier to write comments now.
* i3wm screencasting gifs :tech:   
:PROPERTIES:
:CREATION-DATE: 2019-05-24
:MODIFICATION-DATE: 2019-05-25
:HASH:     443c6f51bbb930393bf3aa4aba44b689
:PREVIOUS-HASH: 443c6f51bbb930393bf3aa4aba44b689
:END:
I read an amazing [[https://en.reddit.com/r/i3wm/comments/65vis5/screenshot_commands_from_my_i3_config/dgnic66/][comment on reddit]] about how to very easily record the screen into gifs and I'll report it here with some improvements. All of this can be used in any other window manager, as long as you can create keyboard shortcuts.
**  Create shortcut to start and stop screenrecording
First we create a shortcut to start and stop the screenrecording

#+BEGIN_SRC bash
bindsym Shift+Ctrl+Print exec ~/.files/i3/record-screen.sh gif
bindsym Shift+Mod4+Print exec ~/.files/i3/record-screen.sh ogv
#+END_SRC
** record-screen.sh  
This is the file where most things happen.

*Dependencies:* =byzanz-record= , =slop=.

It uses =byzanz= to record the screen, and =slop= to select which screen to record from, as well as the =--exec= flag. =--exec= makes it so =byzanz= records until that process exists. This allows us to control exactly for how long the recording will last since we can simply kill it using our shortcut.

#+BEGIN_SRC bash
#!/usr/bin/env bash
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
IS_RECORDING_PID=`pgrep -a -f is-recording | cut -f1 -d' '`
IS_RECORDING_SH=$HOME/.files/i3/is-recording.sh

if [[ "$IS_RECORDING_PID" == "" ]]; then
	read -r X Y W H < <(slop -n -l -c 0.157,0.333,0.466,0.4 -f "%x %y %w %h")
	FILE_NAME=~/Videos/Screencast-$(date -Iseconds | cut -d'+' -f1).$1
	case "$1" in
		byzanz)
			byzanz-record -w $W -h $H -x $X -y $Y -c --exec="$IS_RECORDING_SH" $FILE_NAME >& /dev/null
			;;
		gif)
			byzanz-record -w $W -h $H -x $X -y $Y -c --exec="$IS_RECORDING_SH" $FILE_NAME >& /dev/null
			;;
		ogv)
			byzanz-record -a -w $W -h $H -x $X -y $Y -c --exec="$IS_RECORDING_SH" $FILE_NAME >& /dev/null

			if [[ "$2" == "--convert-to-gif" ]]; then
				sleep 1
				$DIR/convert-ogv-to-gif.sh $FILE_NAME | xclip -selection clipboard
			fi
			;;
	esac
else
	polybar-msg hook is-recording 1
	kill $IS_RECORDING_PID
fi
#+END_SRC
** is-recording.sh

This is the process that when killed stops the recording. 
#+BEGIN_SRC bash
#!/usr/bin/env bash

polybar-msg hook is-recording 2

while true; do
	sleep 60
done
#+END_SRC
** Improvements and changes
*** Making the gif smaller
Recording a gif using the above files will result in files that are unreasonably large. A 10s recording might take 10mb!

Therefore the first thing we should do is optimize the gif so that it is smaller.  Luckily there is a program that does just that: [[https://github.com/kohler/gifsicle][gifsicle]]. Since there are very few changes between each frame in a screencast, this can turn 10mb files into 100kb files!

This is the relevant change:
#+BEGIN_SRC bash
		gif)
			byzanz-record -w $W -h $H -x $X -y $Y -c --exec="$IS_RECORDING_SH" $FILE_NAME
			gifsicle --batch --optimize=3 $FILE_NAME
			;;
#+END_SRC
*** Copying the file to the clipboard
After you've save the file, it is useful to have it copied to the clipboard, so you can you use it in another place. In my case, I like being able to paste the screencast directly to my orgmode files by using my [[https://github.com/itf/clipboard2org/blob/master/clipboard2org.el][clipboard2org package]], but you can use other programs.  

This depends on =xclip=.
#+BEGIN_SRC bash
	echo $FILE_NAME| xclip -i -selection clipboard -t text/uri-list
#+END_SRC
*** Displaying a notification when you finish recording
I do not use polybar. So instead I use [[https://github.com/vlevit/notify-send.sh][notify-send.sh]] to send a notification when we finish the recording so I know that the command worked:

#+BEGIN_SRC bash
~/.config/i3/notify-send.sh/notify-send.sh -i display  "finished recording"
fi
#+END_SRC
*** Recording webms
Webms are better than gifs when supported. They are supported by basically everything, except IOS devices and internet explorer. In other words, it is even better than being supported everywhere haha. 
#+BEGIN_SRC bash
		webm)
			byzanz-record -w $W -h $H -x $X -y $Y -c --exec="$IS_RECORDING_SH" $FILE_NAME
			;;
#+END_SRC
*** Putting it all together
This is the end result.  The *Dependencies:* =byzanz-record= , =slop=, =gifsicle=, =notify-send.sh=.

All  of the paths are based on the paths I've setup here, you should adapt them to your case.

#+BEGIN_SRC bash
#!/usr/bin/env bash
#!/usr/bin/env bash
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
IS_RECORDING_PID=`pgrep -a -f is-recording | cut -f1 -d' '`
IS_RECORDING_SH=$HOME/.tools/is-recording.sh

if [[ "$IS_RECORDING_PID" == "" ]]; then
	read -r X Y W H < <(slop -n -l -c 0.157,0.333,0.466,0.4 -f "%x %y %w %h")
	FILE_NAME=~/Videos/Screencast-$(date -Iseconds | cut -d'+' -f1).$1
	case "$1" in
		byzanz)
			byzanz-record -w $W -h $H -x $X -y $Y -c --exec="$IS_RECORDING_SH" $FILE_NAME 
			;;
		gif)
			byzanz-record -w $W -h $H -x $X -y $Y -c --exec="$IS_RECORDING_SH" $FILE_NAME
			gifsicle --batch --optimize=3 $FILE_NAME
			;;
		webm)
			byzanz-record -w $W -h $H -x $X -y $Y -c --exec="$IS_RECORDING_SH" $FILE_NAME
			;;
		ogv)
			byzanz-record -a -w $W -h $H -x $X -y $Y -c --exec="$IS_RECORDING_SH" $FILE_NAME 

			if [[ "$2" == "--convert-to-gif" ]]; then
				sleep 1
				$DIR/convert-ogv-to-gif.sh $FILE_NAME | xclip -selection clipboard
			fi
			;;
	esac
	echo $FILE_NAME| xclip -i -selection clipboard -t text/uri-list
else
	#polybar-msg hook is-recording 1
	kill $IS_RECORDING_PID
	~/.config/i3/notify-send.sh/notify-send.sh -i display  "finished recording"
fi
#+END_SRC
** Example!
[[file:./gif/Screencast-2019-05-24T044159-0400.gif]]

* Animating gifs in orgmode :emacs:tech:
:PROPERTIES:
:CREATION-DATE: 2019-05-25
:MODIFICATION-DATE: 2019-05-25
:HASH:     379686b25975f21f6bdb38c1c1834720
:PREVIOUS-HASH: 379686b25975f21f6bdb38c1c1834720
:END:
Makes gif animated in orgmode.
 
From the [[https://github.com/Fuco1/org-inline-image/blob/master/org-inline-image.el][org-inline-image package]], with minimal modification ( the only change is testing if the figure is an image by checking the 'org-image-overlay, instead of the custom created oerlay). This requires the package dash.

It will automatically play the gif after you've left the (point) on the image. Sadly play gifs seem to be computationally intensive on emacs.
#+BEGIN_SRC emacs-lisp 
;; Copyright (C) 2014 Matus Goljer <matus.goljer@gmail.com>
;; Package-requires: ((dash "2.5.0"))
(defun org-inline-image--get-current-image ()
  "Return the overlay associated with the image under point."
  (car (--select (eq (overlay-get it 'org-image-overlay) t) (overlays-at (point)))))

(defun org-inline-image--get (prop)
  "Return the value of property PROP for image under point."
  (let ((image (org-inline-image--get-current-image)))
    (when image
      (overlay-get image prop))))

(defun org-inline-image-animate ()
  "Animate the image if it's possible."
  (interactive)
  (let ((image-props (org-inline-image--get 'display)))
    (when (image-animated-p image-props)
      (image-animate image-props))))

(defun org-inline-image-animate-auto ()
  (interactive)
  (when (eq 'org-mode major-mode)
    (while-no-input 
      (run-with-idle-timer 0.3 nil 'org-inline-image-animate))))

(setq org-inline-image--get-current-image (byte-compile 'org-inline-image--get-current-image))
(setq org-inline-image-animate  (byte-compile 'org-inline-image-animate ))
(add-hook 'post-command-hook 'org-inline-image-animate-auto)
#+END_SRC
* Automatic Latex Fragment Toggling in org-mode :emacs:tech:
:PROPERTIES:
:CREATION-DATE: 2019-05-25
:MODIFICATION-DATE: 2019-05-25
:HASH:     06fc1789e4c761544a4cbd9fe53322d9
:PREVIOUS-HASH: 06fc1789e4c761544a4cbd9fe53322d9
:END:
Automatic toggle latex fragments in orgmode when point is in them.

I found a solution by [[http://slumpy.org/blog/2017-02-01-automatic-latex-preview-in-org-mode/][Konstantin Kliakhandler]], based on a [[http://kitchingroup.cheme.cmu.edu/blog/2015/10/09/Automatic-latex-image-toggling-when-cursor-is-on-a-fragment/][solution premade by John
Kitchin]].

The code worked fine, however, it was fairly slow, and sometimes it would issue too many commands at once (for example, when it was scrolling).

Therefore, I decided to improve it and make it faster!

The first thing I did was to add a =while-no-input= to the beginning of the code, so that it can be interrupted with user input. The second thing was to add a =(run-with-idle-timer 0.05 nil= This adds a delay of .05 seconds before displaying or removing the image. This is particularly useful when scrolling, because, together with the =while-no-input=   it stops the function from running multiple times while you scroll, or move around the text quickly, or when you take multiple actions that take less than 0.05 seconds.

At last, I improved the performance considerably by using the trick I learned from  [[https://github.com/Fuco1/org-inline-image/blob/master/org-inline-image.el][org-inline-image package]], i.e that we can get the overlay at point and filter it by a specific property. This way instead of going through a potentially very large list of overlays, we make use of a function that was implemented in C, which is likely much faster, and we only have to go through all the overlays that are defined at point, which are likely much fewer than the number of overlays on the buffer. 

At last I decided to byte compile the function, because, why not? It will be run at the end of every input anyway.

Putting this all together:


#+BEGIN_SRC emacs-lisp 
(defvar org-latex-fragment-last nil
  "Holds last fragment/environment you were on.")

(defun my/org-latex-fragment--get-current-latex-fragment ()
  "Return the overlay associated with the image under point."
  (car (--select (eq (overlay-get it 'org-overlay-type) 'org-latex-overlay) (overlays-at (point)))))

(defun my/org-in-latex-fragment-p ()
    "Return the point where the latex fragment begins, if inside
  a latex fragment. Else return false"
    (let* ((el (org-element-context))
           (el-type (car el)))
      (and (or (eq 'latex-fragment el-type) (eq 'latex-environment el-type))
          (org-element-property :begin el))))

(defun org-latex-fragment-toggle-auto ()
  ;; Wait for the s
  (interactive)
  (while-no-input 
    (run-with-idle-timer 0.05 nil 'org-latex-fragment-toggle-helper)))

(defun org-latex-fragment-toggle-helper ()
    "Toggle a latex fragment image "
    (condition-case nil
        (and (eq 'org-mode major-mode)
             (let* ((begin (my/org-in-latex-fragment-p)))
	       (cond
	        ;; were on a fragment and now on a new fragment
	        ((and
	          ;; fragment we were on
	          org-latex-fragment-last
	          ;; and are on a fragment now
                  begin
	          ;; but not on the last one this is a little tricky. as you edit the
	          ;; fragment, it is not equal to the last one. We use the begin
	          ;; property which is less likely to change for the comparison.
	          (not (= begin
		          org-latex-fragment-last)))
	         ;; go back to last one and put image back
	         (save-excursion
	           (goto-char org-latex-fragment-last)
	           (when (my/org-in-latex-fragment-p) (org-toggle-latex-fragment))
	           ;; now remove current imagea
                   (goto-char begin)
	           (let ((ov (my/org-latex-fragment--get-current-latex-fragment)))
	             (when ov
	               (delete-overlay ov)))
	           ;; and save new fragment
	           (setq org-latex-fragment-last begin)))
                
	        ;; were on a fragment and now are not on a fragment
	        ((and
	          ;; not on a fragment now
	          (not begin)
	          ;; but we were on one
	          org-latex-fragment-last)
	         ;; put image back on
	         (save-excursion
	           (goto-char org-latex-fragment-last)
	           (when (my/org-in-latex-fragment-p)(org-toggle-latex-fragment)))
                 
	         ;; unset last fragment
	         (setq org-latex-fragment-last nil))
                
	        ;; were not on a fragment, and now are
	        ((and
	          ;; we were not one one
	          (not org-latex-fragment-last)
	          ;; but now we are
	          begin)
                 (save-excursion
	           (goto-char begin)
                   ;; remove image
	           (let ((ov (my/org-latex-fragment--get-current-latex-fragment)))
	             (when ov
	               (delete-overlay ov)))
	           (setq org-latex-fragment-last begin)))
                ;; else not on a fragment
                ((not begin)
                 (setq org-latex-fragment-last nil)))))
      (error nil)))



(add-hook 'post-command-hook 'org-latex-fragment-toggle-auto)
(setq org-latex-fragment-toggle-helper (byte-compile 'org-latex-fragment-toggle-helper))
(setq org-latex-fragment-toggle-auto (byte-compile 'org-latex-fragment-toggle-auto))
#+END_SRC

And here is an example!
[[file:./gif/Screencast-2019-05-25T054725-0400.gif]]

* Magically setup emacsclient :emacs:tech:
:PROPERTIES:
:CREATION-DATE: 2019-05-25
:MODIFICATION-DATE: 2019-08-02
:HASH:     321fdc83ea76fcb34fc3c5448107b520
:PREVIOUS-HASH: 321fdc83ea76fcb34fc3c5448107b520
:END:
This is a magical way of automatically setting up emacsclient, by [[https://en.reddit.com/user/northrupthebandgeek][northrupthebandgeek]]. If you start emacs for the first time, it will start a server. If the server has already been started, it will delegate to emacsclient. 

One tiny improvement over the function defined on the [[https://en.reddit.com/r/emacs/comments/4586eq/quick_emacs_snippet_to_automatically_use/][reddit post]], is that this doesn't guess what is the name of the emacs server file. It instead generates the nam
e in the same ways as done by the server package.
#+BEGIN_SRC emacs-lisp 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; from: https://en.reddit.com/r/emacs/comments/4586eq/quick_emacs_snippet_to_automatically_use/
;;
;; Automagical EmacsClient functionality
;;
;; Basically, if Emacs is already running, this shunts things over to
;; the existing Emacs; otherwise, it readies itself to accept said
;; shunting.
;;
;; This operates by detecting the existence of an Emacs server socket
;; file.  If a socket is found, Emacs will
;; spin up emacsclient and immediately exit itself.  Otherwise, Emacs
;; will start a new server.


(defun server-already-running-p ()
  "Is Emacs already running?
Gets name based on server-force-delete."
       (let ((file (expand-file-name
                    server-name
		    (if server-use-tcp
		        server-auth-dir
		      server-socket-dir))))
         (file-exists-p file)))

(defun server-shunt ()
  "Shunts to emacsclient"
       (let ((args (append '("emacsclient" "-a" "\"\"" "-c" "-n")
                           (cdr command-line-args))))
         (shell-command (substring (format "%S" args) 1 -1))
         (kill-emacs)))

(unless (featurep 'server)
  (unless (boundp 'server-process)
    (require 'server)
    (if (server-already-running-p) (server-shunt) (server-start))))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC
* Blogging, past and not blogging rant                    :personal:
:PROPERTIES:
:CREATION-DATE: 2019-08-02
:MODIFICATION-DATE: 2019-09-02
:HASH:     8c2f4038de72c4f7bfeefea6a436af90
:PREVIOUS-HASH: 8c2f4038de72c4f7bfeefea6a436af90
:END:
I used to blog a lot in high school.

One blog I was really proud of was [[http://olimpiadascientificas.org/vida-de-olimpico/ivan.olimpiadascientificas.com/index.html][Ivan vida de olimpico]], which was a website I wrote while I was taking part in science olympiads. The reason I wrote the website was to help incentive people to take part on science olympiads, by showing how I studied, telling stories about the competitions, showing how fun it was!

Before I stopped writing it, I had already reached the stage where was making my own bad drawings to better illustrate the stories

#+ATTR_ORG: :width 300
#+CAPTION: 
[[file:./img/15647979795295734.jpg][file:./img/15647979795295734.jpg]]
#+ATTR_ORG: :width 300
#+CAPTION: 
[[file:./img/15647980113789408.jpg][file:./img/15647980113789408.jpg]]

It was great! I received about 50 different visitors per day and answered comments in multiple of the posts. I had written some really great posts about motivation and study and really liked doing so. 

Besides my main blog, I also maintained the website [[http://web.archive.org/web/20160112231415/http://www.olimpiadascientificas.com/][olimpiadascientificas.com]]. We received about 500 visits per day, from all over Brazil. It was the first Brazilian website to help students take part in science olympiads, providing study guides, hints, instructions on how to take part on them and so on. 

But then *what happened*?

I was writing study guides to help people take part in the [[http://olimpiadascientificas.org/static/pdf/Resolu%C3%A7%C3%A3o_OBB_VII_fase2.pdf][biology]], [[http://olimpiadascientificas.org/static/pdf/Linguistica0.8.pdf][lynguistics]], [[http://olimpiadascientificas.org/estudo/fisica/][physics]], in 2012, because I had been first place in these 3 Brazilian olympiads in 2012. Taking part in these competitions and then getting to travel to other countries and make friends during the international competition was my life back in the day. They were really my life.
#+ATTR_ORG: :width 300
#+CAPTION: 
[[file:./img/15647992790993993.jpg][file:./img/15647992790993993.jpg]]

However, 2 Brazilian schools who used to also send students to those competitions got pissed. Why did they get pissed? Maybe they truly thought with all their good hearts that I was just a horrible person. Or maybe because they considered that I was taking spots that could be used for their students in the international competitions. Or maybe because they profited from the fact that information was not easily available, so only their students would usually do well on the competitions (together with 2 other schools), which makes making information available strictly bad to them. I don't know, and any speculation is just speculation.

 So they decided to threaten the organizers of some of those competitions in order to get me kicked out from them and have their students who were in 6th place take my place. 

When I say threaten, I do mean threaten. One of the organizers called me saying that they were threatening to sue him if he didn't kick me out (he stopped organizing the physics olympiad in Brazil shortly afterwards because those schools were so horrible to him). To try to justify what they were doing, they used the fact that I was writing study guides to the other competitions to say that I was not dedicating myself enough on my studies, because I should be focusing on a single subject. And they used my blog and website to try to make this case, and argue that focusing on multiple subjects went against the spirit of the competition.

One interesting fact is that those schools were also using the study guides and material that I had written...

#+ATTR_ORG: :width 300
#+CAPTION: 
[[file:./img/15647996617704427.jpg][file:./img/15647996617704427.jpg]]

They managed to get me removed from the International Biology Olympiad team. As well as cause me so much stress that I ended up losing my best friend for not being able to keep being a social person, and abandoning them in a moment of need. 

It was a bit rough.

It was the first time I had experienced that what I considered to be trying to help others could backfire, because someone profits from them not being helped. It was the first time I had someone use information I was sharing to make a dossier against me. And so the first time I saw how important privacy, even for silly things, is; and that being able to freely speak your mind is more of a privilege than a right. 

So for the longest time I've been afraid of writing stories or telling experiences. As well as extremely jaded about doing those things. I felt that writing about anything was a liability, a risk that I was no longer willing to take. 

But a huge part of me want this to change. A huge part of me wants to be able to just write, and tell stories and share pictures without worrying. Maybe that is just being naive and living in a fairy tale, but it brings back a bit of magic to my life. So maybe, just maybe, I will try to go back to writing these spells.

Or maybe I will stay in fear of writing things online. Fear that even the smallest things could be taken out of context.
* Baby deer :personal:
:PROPERTIES:
:CREATION-DATE: 2019-11-06
:MODIFICATION-DATE: 2019-11-06
:HASH:     fc142466c8e9062db211e8a554c5a1e9
:PREVIOUS-HASH: fc142466c8e9062db211e8a554c5a1e9
:END:
Taking care of a baby deer. College app essay, partially erased and adapted to protect personal information.

** Baby deer
When I was fourteen,  I was designated the responsibility of caring for a rescued newborn deer. A hunter had killed its mom and left it there to die. The deer was weak, dehydrated and hungry — on the brink between life and death.

 I named her “Lita.” In the beginning, she could barely bear her own weight. Each day I’d feed her with a little nursing bottle and play with her so she wouldn't feel lonely. Day by day, she was growing stronger. After three weeks she was able to walk and eat by herself, making my job much easier. She was cute and gentle — she always followed me at home and asked me for caress,touching my hand with her head.

I started getting tired of taking care of her because it required so much time, but I couldn't go out and leave her alone. She was my responsibility. However, after one month I got bored and started to spend my time reading or playing on the computer. To be honest, I didn't want to keep looking after her. My routine was monotonous: putting milk in her plate, petting her and cleaning up her mess.

She grew stronger and I stopped being so cautious. One day, I forgot to check if her milk was still good in the afternoon. It had spoiled, and she died that same night. This happened because I wasn't doing the best I could. No one blamed me, but I knew I could’ve saved her. A little lapse of my attention cost Lita her life. I was sad, but learned an important lesson: the difference between success and failure lies in the details. Some times, it is not you that suffers by your errors, but the ones next to you, and this is what I won't ever allow to happen again. When I make other mistakes in the future, it won't be because of lack of effort. Since then, I have always and I will always try to do my best.
* WANT Being a TA                                                  :noexport:
Being a TA was one of the best experiences I had at MIT.
* MAYBE Enfuse with macrofusion                                    :noexport:
To use macrofusion, you should use the fork that has supported for the updated enfuse soft. You can find one such fork here: [[https://github.com/da-phil/macrofusion][macrofusion]].
* Long name problems :personal:
:PROPERTIES:
:CREATION-DATE: 2019-09-02
:MODIFICATION-DATE: 2019-09-06
:HASH:     5ffe554a569bd9dad371e3f5515a91b7
:PREVIOUS-HASH: 5ffe554a569bd9dad371e3f5515a91b7
:END:

My name in my passport fairly long. (10 characters first name, 22 letters second name, with spaces in between). This causes me all kinds of trouble here in the US:
- For 3 years in a row I had to call the IRS in order to get my tax return back; I believe it to be because the limit on the w2 forms was names of 30 characters, so my name didn't fully match.
- I used to not be able to do online check-ins into flights, but this has changed in recent years!
- As I was applying for health insurance, surprise! my name was accepted. However, on the last page where you have to rewrite your name to confirm you've read the instructions, they did not accept spaces in the first name, only on the last name. I had to apply through email and mail after half an hour on the phone with customer service.
- Basically every single one of my science olympiad certificates has my name written in slightly different ways in order to make it shorter. Each remove a different part of my name.
- I couldn't signup to pay for electricity and gas through the website.
- Equifax still hasn't being able to deal with my long name, so it reports that I have no credit score. Therefore when people run a credit check on me, it is weird. Transunion has no problems with this.
- When logging in the mit table tennis, I crashed the website. It tried to save my name, which was given by the mit certificate.
* -ARCHIVE-                                                        :personal:
:PROPERTIES:
:CREATION-DATE: 2019-09-06
:MODIFICATION-DATE: 2019-11-24
:HASH:     dd171e9baf6630917abc48da80911829
:PREVIOUS-HASH: dd171e9baf6630917abc48da80911829
:END:

I have a bad memory, but I really care about lots of my friends and I want to make sure they know this. And one I try to do so is to try to keep track of what is happening in their lives so I can ask them afterwards.  I keep track of their hobbies, what big changes are happening in their lives and I write little notes in an org mode file on my laptop. 
But sometimes people move away, figuratively and literally speaking;  and I know that I won't be talking to this person anymore, maybe ever again.   Maybe the friendship was not strong enough and we were not close enough, so now that they moved out there is no reason for them to ever contact me again, and me contacting them would just be weird.  Or maybe something so horrible happened that the person should never be contacted again. Or maybe out of mutual agreement we decide that is time for things to end,

Which brings me to the title of this post., :ARCHIVE:. When this happens,  I archive the notes. They still exist, just as memories will always exist, but it is time to move on.  They won't be updated anymore, and they shouldn't be opened anymore.  In a certain way it is my own personal way of grieving, putting a period at the end of a story. Writing Fin, and putting that very last dot on the "i". The way that the story ends, not with a bang, but with the silence following the last click of a keyboard key,  C'est la vie. 
* 10 things to smell per day :personal:
:PROPERTIES:
:CREATION-DATE: 2019-11-06
:MODIFICATION-DATE: 2020-07-23
:HASH:     2892a6bafc43c56be0c0d720629a1aac
:PREVIOUS-HASH: 2892a6bafc43c56be0c0d720629a1aac
:END:
Talking to a friend in San Francisco who is very attuned with her sense of smell made me realize that I mostly just ignore my sense of smell, to the point that I feel like I'm almost losing it. So I'll try to keep a list of at least 10 things I've smelled and try to make a conscious effort into remembering it. 

I wonder if I generally ignore my sense of smell because I had to learn to tune it out when dealing with so many different animals and so many different types of animal poop back in the day. Seriously, it was quite horrible. 
** [2019-10-16]
1. Conditioner on my skin
2. Chips that someone opened in the airplane
3. The car smell on the Uber
4. The sad smell that almost felt like cardboard of the chips bag I got in the plane
5. The slightly better smell of the chips on the skin of my hand
6. The ammonia smell in the men's bathroom
7. My deodorant mixed with my own smell
8. Wonderful green tea smell from the green tea bag
9. Green tea smell in the water
10. The sudden change of smell after putting sugar on the green tea.

Update [2019-11-06] I feel like I'm a lot more in tune with my sense of smell now! It is not as great as it used to be, but it is getting better!

Update [2020-07-09] I never really updated this, but yeah, just paying attention on smells has made me recover it; I can now tell exactly in which spot on the floor a dog has laid 
* MAYBE Don't expect different results doing the same thing        :noexport:
* College essays reblog                                            :personal:
:PROPERTIES:
:CREATION-DATE: 2013-03-29
:MODIFICATION-DATE: 2019-11-17
:HASH:     95e1d5a318d7b30ea46741af1d048b2a
:PREVIOUS-HASH: 95e1d5a318d7b30ea46741af1d048b2a
:END:
This is a reblog from my [[http://olimpiadascientificas.org/vida-de-olimpico/ivan.olimpiadascientificas.com/2013/03/29/i-was-admitted-in-harvard-mit-yale-and-princeton/index.html][old blog]]. The missing college essay that was too personal is the one that was adapted to the [[Baby deer]] post.
#+ATTR_ORG: :width 300
#+CAPTION: 
[[./png/bonecooc.png]]
** I was admitted in Harvard, MIT, Yale and Princeton :)
[2013-03-29 Fri]
Hey there! Today’s post will be in English; I really hope my usual readers won’t mind that.

Now that all the university results were released, I wanted to share my essays – maybe some day they will help someone. And even if they don’t help, I hope someone will find them interesting :).

Sadly I won’t share every essay – some of them are too personal; it wouldn’t be nice if other people read them haha.

Common App :)
- [[file:./doc/FETECMS-revision1.0.doc][FETECMS-revision1.0.doc]]
- [[file:./pdf/motivation-final-final.pdf][motivation final final]]

MIT :)

- [[file:./doc/1-background-revision-2.doc][1-background-revision-2.doc]]
- [[file:./doc/2-Extra-activity-people-revision2.doc][2-Extra-activity-people-revision2.doc]]
- [[file:./doc/6-challenge-revision-2.doc][6-challenge-revision-2.doc]]
- [[file:./doc/5-world-revision3.doc][5-world-revision3.doc]]
- [[file:./doc/4-personality-revision-2.1.doc][4-personality-revision-2.1.doc]]
- [[file:./doc/3-program-UROP-revision-2.doc][3-program-UROP-revision-2.doc]]
* MAYBE Losing the sparkle :noexport:personal:
* The first of many Brazilian-Science-Olympiads-guide websites     :personal:
:PROPERTIES:
:CREATION-DATE: 2019-11-24
:MODIFICATION-DATE: 2019-11-27
:HASH:     61dde135c5d54b830e56ffdaf3984f24
:PREVIOUS-HASH: 61dde135c5d54b830e56ffdaf3984f24
:END:
Until 2010 there were no website in Brazil one could access to learn about what [[https://en.wikipedia.org/wiki/International_Science_Olympiad][science olympiads]] existed nor how to study for them. The only way to learn about the existence of the competitions was to randomly search the internet until you found one you didn't know about, or to study in a large school that prepared students for those competitions. However, even if you did find out about those competitions, there was no way for one to discover what books they should study or how to better prepare for the science olympiads. And for the small schools admins, it was hard for them to keep track of all the different dates where the competitions happened or when they should register for them!

I was from a small town, and this had directly affected me, since I had to learn about the different competitions and prepare for them on my own. Because of this, once I moved to a larger city and started living away from family (when I was 15) to attend a larger school, I decided to start a blog and write about the main Brazilian Science Olympiads and how to study for them!
*** [[https://itadeufa.wordpress.com/][Projeto Olímpico]]

After writing it for about a month, there was enough interest from friends that we changed the hosting from wordpress to [[https://olimpiada.webnode.com.br/][webnode]], which allowed for a bit more customization.  
*** Olimpiadas.webnode.com.br
#+ATTR_ORG: :width 300
#+CAPTION: 
[[file:./img/15746376229424477.jpg][file:./img/15746376229424477.jpg]]


#+ATTR_ORG: :width 300
#+CAPTION: 
[[file:./img/15746385825016527.jpg][file:./img/15746385825016527.jpg]]


At this time, more people decided to join the project, and we became a team of 3 people.  We started receiving comments from students from all over Brazil, thanking us for the project. We started posting information about all the competitions as things happened. You could access our website to know what competitions had their registration open, which ones were releasing results and so on. We also improved our study guides and created pages for each science olympiad explaining what they were. We were even deciding on standards such as "when writing a post about a result, the post contains a single image at the top with the symbol of the competition, and we end the post with 'congratulations to all the winners!'".

We also bough our own domain! Olimpiadascientificas.com

About 10 months later, in late 2011, our website got popular enough that Augusto, a student from very far away decided to help us! He had experience with creating websites and blogs, so we moved it to our own VM running wordpress!
*** [[http://web.archive.org/web/20160112231415/http://www.olimpiadascientificas.com/][Olimpiadascientificas.com]]
#+ATTR_ORG: :width 300
#+CAPTION: 
[[./png/bonecooc.png]]
The website kept growing and the team kept growing. In 2012, when I appeared on Tv, newspapers and magazines, I advertised the website and we were getting Approximately 500 visits per day!

Our team was amazing, we had probably over 30 people. Most of them only contributed with a single post or so, while others contributes with dozens, and also many different pages or study materials.  I'd say that anyone in Brazil preparing for an International Science Olympiad was using our website.  There were people who lived near my small hometown who were preparing for the International Astronomy and Astrophysics Olympiad by using material we had shared, and they went to IOAA. 

We kept doing things! We created the first [[https://www.facebook.com/groups/apoioolimpico/][Facebook group]] for people to share information about science olympiads, as well as the first [[https://www.facebook.com/OlimpiadasCientificas/][Facebook page]] to share the news! At some point we had a twiter, and we had a [[https://www.youtube.com/channel/UCUT87IB960L3foyy09gjmtw][Youtube]] channel where we were interviewing students and asking about their experiences!

We kept the lists of the Brazilians who had gone to International Science Olympiads as well as a list of the awards received by Brazil. We were producing our own study material, and expanding our list of competitions to State competitions as well! We were also keeping track of pictures of all the Brazilian teams in the multiple international science olympiads and sharing them.

We started another project, [[https://olimpiadascientificas.org/vida-de-olimpico/][Vida de olímpico]] where people taking part in science competitions were writing blogs about their experiences. When I was in a small town, taking part in these competitions was a very lonely endeavor; by having a blog with other people sharing their experiences, the intention was to create a sense of community and also encourage people to keep going and keep studying and trying! Another intention was to debunk the myth that people taking part in those competitions had some type of divine gift that allowed them to be better than the others, since on the blogs we showed the amount of study that we had to put on. 

In my personal "vida de olímpico" blog, I was receiving around 50 visits per day and many comments and I truly believed things were a bit better because of all the information sharing we were promoting!

Some of the people who started writing those blogs, started writing them when they were just starting, and after a while they were traveling the world to go to science camps on trips they had won, and to International Science Olympiads! It was fantastic seeing their development! 

*** The competitors and the downfall
But soon we started having people wanting to create their own websites about science olympiads, and then use their website to share their own facebook groups for people to study and discuss and so on. There was a split, and with most of the people in olimpiadascientificas graduating, we were not going to update the website as often and it was harder to find people to take over for us, since they went to other websites.  Then there were some problems with one of the people in the team deleting all the other people from our team and I not handling it very well. So our website kinda died.

The final blows to the website were when we stopped maintaining our wordpress server and because of vulnerabilities the website stopped being able to load. And later on, when we forgot to renew the domain and lost it.


Our main "[[https://noic.com.br/][competitor]]" is still going strong, and they copied multiple parts of our style to the dot! Which makes me happy, because even though our website mostly died, there are still others doing exactly what we wanted to do! And they have enough people in their team that they can focus on producing original content rather than just reporting news! More producing knowledge rather than just sharing how to access knowledge. I  just wish the menu on their website was easier to use, since I find it very hard to find the study page for any of their subjects, since it involves 3 clicks and accessing 3 different pages, and I also wish that they had a more searchable name, so that other people would more readily find them instead of us.


Our second [[https://obmepeiros.com.br/][main competitor]] went through the same rabbit hole we went once, but they went much deeper. In order to make their website cooler, they started adding more and more plugins, and images and javascript and all. It has reached the point where their website is so slow that I find it very bad to use... It is sad, since otherwise they'd be helping a lot more people than they currently are.
*** The memorial 
#+ATTR_ORG: :width 500
#+CAPTION: 
[[file:///home/ivanaf/Downloads/temp/pageviews.png][pageviews.png]]


After all the problems with wordpress and realizing that I wouldn't be able to maintain the website, I made a "memorial". I converted the website to a static generated website in jekyll, so it would be much faster. I deleted the news and posts and kept only the rest: information about the main science olympiads, how to study, and information about the teams. However, the saddest part was converting the "Vida de Olímpico" blogs to fixed pages, by using a webscrapper, since they were also could not be used anymore because of the un-maintained wordpress problems...

We went from having 15k page views per day, on our most popular point, to now having only around 100 pageviews per day. I hope the students have been able to find the help they needed through other sources now.

*** The post-mortem
Recently I've added a web scrapper that inserts the news of all the main Brazilian Science Olympiad websites to our front page, in the hope of redirecting students to what are the best sources of information now.

#+ATTR_ORG: :width 500
#+CAPTION: 
[[file:///home/ivanaf/Downloads/temp/ocfront.png][ocfront.png]]

And in a few months I hope it will be possible for me to recover our original domain!

All in all, we managed to help thousands of people throughout the years, and it makes me happy to see some people that we helped in very amazing colleges!




* MAYBE Thanks Ivan Guilhon                                        :noexport:
Story about studying for the IPhO on my own.
* MAYBE It all accelerated by accident                             :noexport:
Being chosen by ijso br through opf
* Me and animals :personal:
:PROPERTIES:
:CREATION-DATE: 2019-11-27
:MODIFICATION-DATE: 2020-06-29
:HASH:     af0d6f2a6b13d4796822e32d62f69540
:PREVIOUS-HASH: af0d6f2a6b13d4796822e32d62f69540
:END:
Pictures of me with animals! Usually in open spaces! Each of them with a story behind them! From recent to old.

#+ATTR_ORG: :width 300
#+CAPTION: 
[[file:./img/15934142632760541.jpg][file:./img/15934142632760541.jpg]]

#+ATTR_ORG: :width 300
#+CAPTION: 
[[file:./img/15934142988490329.jpg][file:./img/15934142988490329.jpg]]
#+ATTR_ORG: :width 300
#+CAPTION: 
[[file:./img/15748346439516828.jpg][file:./img/15748346439516828.jpg]]

#+ATTR_ORG: :width 300
#+CAPTION: 
[[file:./img/15748347656123629.jpg][file:./img/15748347656123629.jpg]]

#+ATTR_ORG: :width 300
#+CAPTION: 
[[file:./img/15748349119110804.jpg][file:./img/15748349119110804.jpg]]

#+ATTR_ORG: :width 300
#+CAPTION: 
[[./jpg/Imagem_758rot.jpg]]

#+ATTR_ORG: :width 300
#+CAPTION: 
[[./jpg/Imagem_1922.jpg]]


#+ATTR_ORG: :width 300
#+CAPTION: 
[[./jpg/Imagem_1939.jpg]]


#+ATTR_ORG: :width 300
#+CAPTION: 
[[./jpg/Imagem_522.jpg]]

#+ATTR_ORG: :width 300
#+CAPTION: 
[[file:./img/15934143606084917.jpg][file:./img/15934143606084917.jpg]]
#+ATTR_ORG: :width 300
#+CAPTION: 
[[file:./img/15934143438411355.jpg][file:./img/15934143438411355.jpg]]
#+ATTR_ORG: :width 300
#+CAPTION: 
[[./jpg/Imagem_496.jpg]]
#+ATTR_ORG: :width 300
#+CAPTION: 
[[./jpg/Imagem_226.jpg]]
#+ATTR_ORG: :width 300
#+CAPTION: 
[[./jpg/Imagem_131.jpg]]


* A game from the past                                             :personal:
:PROPERTIES:
:CREATION-DATE: 2019-11-28
:MODIFICATION-DATE: 2020-03-01
:HASH:     4c89d6d79142b94278d9b0c5ad5f2286
:PREVIOUS-HASH: 4c89d6d79142b94278d9b0c5ad5f2286
:END:
I've ported an old game I made in inform7 to javascript. It is filled with teenager angst, because I made the game in order to deal with some problems I was having back them.

 *Alone in the darkness*

   by Ivan Tadeu "This is a Interactive Narrative  by Ivan Tadeu Ferreira Antunes Filho. It talks about a night in the life of a sad boy. The changes that happens after writing one word may or may not depend upon the words that are already in the narrative."

                                       

Click a word of significance from the text to revise the story. 

----------------------------
@@html: <br><br>@@
@@html: <style> @@
#+BEGIN_SRC sh :exports results :results value html
#!/bin/bash
/bin/cat ./css/textclickgame.css
#+END_SRC
@@html: </style>@@
@@html: <script src="./js/js-yaml.js"></script> @@ 
@@html: <script src="./js/ace.js" type="text/javascript" charset="utf-8"></script> @@ 
@@html: <script src="./js/interactivenarrative.js"></script> @@ 
@@html: <script> run_from_yaml_file("./yaml/alone.yaml",  {"v": "$1$", "1":"/Sad/ and /lonely/", "END": "END"}); </script>@@

#+BEGIN_EXPORT html
 <div id = "text-background">
        <p class = "story" id="story"></p>
        <br>
        <p class = "story" id="timed_words"></p>
        <div  id = "editing" class="hidden">
        <br><br>
            <div  id = "editing-1" >
            <p class = "story" id="subs"></p>
                    <br><br>
            <p class = "story" id="subs2"></p>
                <br><br>
            </div>

                    
            <div  id = "editing-2" >
            <p class = "story" id="flags"></p>
                    <br><br>
            </div>

            <button id="reload_yaml1">RELOAD YAML editor</button>
            <button id="reload_yaml2">RELOAD YAML area</button>

            <button id="restart">RESTART</button>
            <button id="undo_button">UNDO</button>
            <div id="editor"></div>
            <pre > <textarea id="story_yaml" style = "width:100%; height:50vh;"></textarea></pre>

        </div>
        <br><br>
        <button id="toggle_editing" class="hidden">Toggle editing</button>
</div>
#+END_EXPORT
* Starting online journal -- March 1 2020                          :personal:noexport:
:PROPERTIES:
:CREATION-DATE: 2020-03-01
:MODIFICATION-DATE: 2020-03-01
:HASH:     a0ab8559ec6e0543788f998ef568ebcd
:PREVIOUS-HASH: a0ab8559ec6e0543788f998ef568ebcd
:END:

Hello everyone!

I will +force myself to+ start writing about mundane things here, because +then maybe my day to day life will become more exciting, since I'll feel like I'm performing+ it is a good opportunity to practice communication as well as keep memories for the future. I've tried keeping journals just for myself in the past, but I always +felt like it is a waste of time+ thought that allowing others to read what I write was a better use of time, because maybe someone could resonate with some of the ideas I write and help them.

Right now life +fucking sucks, just like always+ is pretty alright. Some main things on my mind:

I need to figure out how to get closer to people. I feel that everyone enjoys when I'm around, and even more, are usually fairly excited when I visit or talk to them. But it is extremely hard to get past this point of just being the fun acquaintance. Sometimes if it is caused by people thinking I'm hitting on them every time I'm just trying to get a closer friendship? Well, if someone has suggestions, I'm all ears.

I have too much work to do, and not a lot of energy to do it.

I want to learn how to tailor, and I'm thinking about getting a sewing machine to fix up clothes.

I really want to cook dinner for someone, so I have an excuse to cook fancy food. It is annoying cooking food just for myself.

I recently learned how to play Katyusha in the guitar. I'm thinking about pulling an all nighter to learn some songs in the piano. I'm thinking about getting a 30 button concertina and just learning how to play some folk songs.

I'm  making a very interesting dating website as a side project. I will release it only inside MIT, and I think it has the potential to be a 1-week fad. 

I have a tiny crush on a person, and I hope I'll get to spend more time with her; but life has been too busy. 

Maybe I should start studying physics and math in my free time again; instead I'm listening to the Worm Audiobook. It is pretty great tbh.

I'm staring at a list of unfinished posts that I should maybe finish some time. 
* I created an Instagram! :personal:noexport:
:PROPERTIES:
:CREATION-DATE: 2020-06-28
:MODIFICATION-DATE: 2020-06-29
:HASH:     0ea92a73989b952a65cd4a74fdba9348
:PREVIOUS-HASH: 0ea92a73989b952a65cd4a74fdba9348
:END:
For anyone looking for more live updates, you can check my instagram, [[https://www.instagram.com/ivan_af_/]]


* Trying mobile static blog generator  :personal:
  :PROPERTIES:
  :CREATION-DATE: 2020-06-29
  :MODIFICATION-DATE: 2020-06-29
  :HASH:     5386caa02157c8a1b451473031d55346
  :PREVIOUS-HASH: 5386caa02157c8a1b451473031d55346
  :END:
#+include: "./Trying_mobile_static_blog_generator.org"
* WANT Implementing rss feed                                       :noexport:
#+BEGIN_SRC emacs-lisp 
(load-file 
  (expand-file-name "ox-rss.el"
                    (file-name-directory (buffer-file-name))))
(outline-hide-sublevels 1)
;must set PUBDATE
;must set  RSS_PERMALINK
(org-rss-export-as-rss nil nil t)
#+END_SRC
* WANT Static website generator on Android with Tasker, Termux, Git and Emacs :noexport:tech:
* Projects ideas
:PROPERTIES:
:CREATION-DATE: 2020-07-23
:MODIFICATION-DATE: 2020-07-23
:HASH:     b3085da40eb080acf2478008f47d16f2
:PREVIOUS-HASH: b3085da40eb080acf2478008f47d16f2
:END:
A very disorganized list of projects I want to work on, together with notes about them.

** Cutting vegetables with blood
Pictures of knives cutting vegetable while drenched in fake blood. No real purpose for this, except that I think it would be cool

** Tep as a pirateshipe navigating through places:
Tep has a helm in a room that looks like a pirateship. It would be really cool if it was connected to something online, such that it seemed that tEp was a real pirate ship.

The idea would be to have a website using open street map together with open layers 

https://news.ycombinator.com/item?id=23722133
maybe use open layers on toip of open street map
** Cli picture tools with gui
There are lots of really cool picture effects that only have a terminal interface.  It would be exciting to have a program that could be used for automatically generating previews for those tools by running it with smaller image sizes.

** Primitive images:
This project is really cool, but I don't like the loss function used by it, so instead use a laplacian pyramid loss for the gradient descent.
https://github.com/fogleman/primitive

So the same project, but instead of using this loss function, use one based on laplacian pyramids contrast as done by macrofusion.

Maybe make it available online,
https://github.com/silvia-odwyer/photon

seems like a good option! Specially if combined with:
https://github.com/silvia-odwyer/gld

Probably use laplacian pyramid loss for the descent. There are some articles about it online.

this one does 
** Music lyrics video for danger line

The lyrics are displayed while moving around a "red line" . The "danger line" is the body outline of someone who died (red), but you only discover it is the outline of the body at the end of the song.

Throughout the song the lyrics go around the outline

Until the very end, they are generally outside the outline, but certain words can be on the boundary (the inside of the boundary represents death). Some words might be in the other side of the boundary.

The effect of bullet Hole, is zooming inside O of hole and inside it there is another hole, to give the impression of going through.

Maybe some effect of heartbeats ecg during the solos.

Once you are inside the outline, things get a lot redder, like red border.

Daugther brings you further from the line
** 3d online game of walking around east campus with the murals
Maybe allow people to upload pictures?

I'd really enjoy to have a 3d representation of the inside of EastCampus, with all the murals and all.
https://learn.display.land/capturing-reality

display.land would be ideal, but it was discontinued on July 10 2020.

(Display.land is an interesting 3D scanning and modeling app built around Google’s ARCore augmented reality processing. The app allows you to scan objects in 3D and then edit, export, or share your scans, all for free!)
https://developers.google.com/ar/develop/java/quickstart

https://3dscanexpert.com/scann3d-android-photogrammetry-app-review/

https://3dscanexpert.com/free-3d-scanning-video-smartphone/
** Route panorama on android
I want to implement an app that performs route panoramas on android.

Here are some link ideas.
https://en.wikipedia.org/wiki/Route_panorama
https://www.cs.iupui.edu/~jzheng/RP/


And maybe strip/slip photography:
https://en.wikipedia.org/wiki/Strip_photography

https://github.com/duanhong169/Camera

https://github.com/CameraKit/camerakit-android
** Dating website where you ship your friends
** Super resolution photo app by upsampling alignning and enfusing or merging, for astrophotography
https://petapixel.com/2015/02/21/a-practical-guide-to-creating-superresolution-photos-with-photoshop/
https://groups.google.com/g/hugin-ptx/c/ijOCcBX7me8
http://www.astrosurf.com/cidadao/super.htm
** selfie with longer focal distance by combining multiple close shots
By scanning your face (similarly to a route panorama), fake your lens to have a longer focal distance, while improving blurring the background

idea: use gyroscope to put a dot on the screen that force the video to stay in the same plane. Use maybe motion tracking:
https://source.android.com/devices/camera/motion-tracking
** Photogrammetry of street art tutorial
start:
https://medium.com/realities-io/getting-started-with-photogrammetry-d0a6ee40cb72
video for the above:
https://www.youtube.com/watch?v=doiimSnLOBM
also http://azadux.com/everydayascan


Also this guy did a lot of it, but left no instructions:
https://www.youtube.com/watch?v=IrgyUFkeJOY

sketchfab seems to be the correct place to share it.

https://news.ycombinator.com/item?id=19685891


https://ww.reddit.com/r/3Dprinting/comments/87tk4j/3d_scanning_with_just_a_phonecamera/

with colmap
also https://www.youtube.com/watch?v=bDHJM6nAKtc
** cindyjs
https://cindyjs.org/docs/
https://montaga.github.io/spherical/
Just play with some spherical droste effects with pictures from mit
https://arxiv.org/pdf/1605.01396.pdf

Also map picture into sphere by using reflections/tiling? 
Idea: convert rectangle to circle conformally, followed by identifying it with one of the hemispheres of a stereographic transformation
https://arxiv.org/pdf/1509.06344.pdf

Or maybe assume it is peirce quincucial
https://arxiv.org/pdf/1605.01396.pdf

https://mipav.cit.nih.gov/pubwiki/index.php/Transform:_Conformal_Mapping_Algorithms#Transformation:_Circle_to_Rectangle

https://www.osti.gov/servlets/purl/4800477
https://www.osti.gov/biblio/4800477-conformal-mapping-circle-onto-rectangle 
** Plausible analytics for MIT/sipb
https://plausible.io/blog/self-hosted-web-analytics-beta
** Make pictures boring
Detects what is relevant in a picture and removes it.
https://www.immersivelimit.com/tutorials/yolact-with-google-colab
https://kharshit.github.io/blog/2019/08/23/quick-intro-to-instance-segmentation

use instance segmentation to detect what is interesting

The use this to fill it up:
https://github.com/zavolokas/Inpainting
https://github.com/YuanTingHsieh/Image_Completion
** Quaternions exploration
Have a simple 3d scene. Apply quaternion functions to the positions of the points. Find an equivalent to droste effect but in 3d space

Similar to this demo https://montaga.github.io/spherical/
So more like this: https://eater.net/quaternions/video/intro

But with a more complex 3d scene and allowing more things than rotations, i.e. allowing complex functions in terms of the quaternion that defines the position.

Using a ray marcher https://github.com/HackerPoet/PySpace might be worth it to have some visualizations that use fractals,

Or maybe just use https://cindyjs.org/docs/cindygltutorial/rendering3d.html.

We will effectively be using conformal transformations
https://mathoverflow.net/questions/52209/3d-conformal-mappings

It seems that the only types are inversion, translation, rotation and dilation. 

maybe use this for the visualization: https://www.youtube.com/watch?v=ztsi0CLxmjw, same thing used for exploring hyperbolic space.

Also, I want everything to happen on the surface of a 4d sphere.

Just more information about quarenions https://marctenbosch.com/quaternions/ < maybe quaternions are trash
*** Exploring surface of 4d objects.
You yourself is like a cube, so you see infinite copies of you on the distance

maybe use a non euclidean ray tracer
https://www.youtube.com/watch?v=YvU-srHhQxw

https://github.com/Limeth/euclider

https://www.youtube.com/watch?v=tl40xidKF-4

but I kinda wnat it to be in javascript

or maybe like: https://arxiv.org/abs/2002.09533  ->> sounds really really promising / seems to be already doing it. https://www.youtube.com/user/ZenoTheRogue
https://ww.reddit.com/r/rust/comments/88b6ix/euclider_noneuclidean_raytracing_prototype/
https://twitter.com/zenorogue/status/1245367263936512001  
** Just add some posts playing with js here
https://ew.reddit.com/r/orgmode/comments/5bi6ku/tip_for_exporting_javascript_source_block_to/
** Make music using this imo problem solution
https://www.youtube.com/watch?v=M64HUIJFTZM
** toilet measure weight
You sit on the toilet. It shows you your weight.
** Practice retouching face images
https://patdavid.net/2011/12/getting-around-in-gimp-skin-retouching.html
https://patdavid.net/2013/08/an-open-source-headshot-ronni_21.html
** Pagination for my blog
Pagination for this org mode blog
** RSS for this blog
** Better theme for this blog, make it not ugly
** Use seam carving to split a image into puzzle pieces for cutting
https://www.youtube.com/watch?v=6NcIJXTlugc
* TODO Pão de queijo recipe (brazilian cheese bread)               :noexport:


700g
2 cups 
half a cup
tablespoon
2 big handfuls of cheese
* JS :noexport:
:PROPERTIES:
:CREATION-DATE: 2020-07-23
:MODIFICATION-DATE: 2020-07-23
:HASH:     72143a77a9244e9b00eccf733f7a68b2
:END:
#+BEGIN_SRC js
var util = require("util");
console.log(123)
#+END_SRC

#+RESULTS:
: 123
* Make cheap headphones sound better on linux / ubuntu                 :tech:
:PROPERTIES:
:CREATION-DATE: 2020-07-23
:MODIFICATION-DATE: 2020-07-23
:HASH:     401ccaceca97d97118ff1198d06f514e
:PREVIOUS-HASH: 401ccaceca97d97118ff1198d06f514e
:END:
Cheap headphones sound bad because their frequency response is all messed up. You can considerably improve this by using an equalizer.

Assuming you are using pulseaudio.

First, install pulseeffects  and  Linux Studio Plugins 
#+BEGIN_SRC sh
sudo apt install pulseeffects
sudo apt install lsp-plugins
#+END_SRC

Now open pulseeffects, create a new profile
#+ATTR_ORG: :width 300
#+CAPTION: 
[[file:./img/15955565703361306.jpg][file:./img/15955565703361306.jpg]]


 and then click in the equalizer


#+ATTR_ORG: :width 300
#+CAPTION: 
[[file:./img/15955562122876432.jpg][file:./img/15955562122876432.jpg]]

You have 2 options.

- Simply listen to some song while moving the things up and down. By doing 3 or 4 passes throughout the frequencies while adjusting them, you can considerably improve them.
- Use some tool to play sounds that will help you callibrate the headphone, 

If you are doing option 2, I particularly like this website: https://mynoise.net/calibration.php . You try to adjust the noises until all frequencies sound the same. Once you've done so, you save the numbers, and insert them in the callibration in pulseeffects.

#+ATTR_ORG: :width 300
#+CAPTION: 
[[file:./img/15955564723380344.jpg][file:./img/15955564723380344.jpg]]

Change the number of bands to match the number of bands used by your noise generator. If using the above website, this number is 10.


Don't forget to save your profile so you can load it later.
